<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZHBHUN</title>
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://zhbhun.github.io/blog/"/>
  <updated>2016-11-15T13:12:02.658Z</updated>
  <id>http://zhbhun.github.io/blog/</id>
  
  <author>
    <name>zhbhun</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://zhbhun.github.io/blog/mysql/MySQL/"/>
    <id>http://zhbhun.github.io/blog/mysql/MySQL/</id>
    <published>2016-11-15T13:12:02.658Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;p&gt;title: MySQL&lt;br&gt;date: 2016-08-03&lt;br&gt;category: MySQL&lt;br&gt;tags: MySQL&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cbb.sjtu.edu.cn/~yixiong/database/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cbb.sjtu.edu.cn/~yixiong/database/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/105796/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL EXPLAIN 命令详解学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/105792/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL 慢查询日志总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/105618/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL 中你应该使用什么数据类型表示时间？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/105225/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL 性能优化：性能提升 50%，延迟降低 60%&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title: MySQL&lt;br&gt;date: 2016-08-03&lt;br&gt;category: MySQL&lt;br&gt;tags: MySQL&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cbb.sjtu.edu.cn/~yixiong/database/&quot; target
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Redux 入门</title>
    <link href="http://zhbhun.github.io/blog/redux/Redux-Introduction/"/>
    <id>http://zhbhun.github.io/blog/redux/Redux-Introduction/</id>
    <published>2016-10-17T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://cn.redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简介&lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;是什么：可预测化的状态管理容器&lt;/li&gt;
&lt;li&gt;&lt;p&gt;特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行于不同的环境：客户端，服务器，原生应用&lt;/li&gt;
&lt;li&gt;超爽的开发体验，如：时间旅行调试器可以编辑后实时预览&lt;/li&gt;
&lt;li&gt;除了 React，还可以支持其他界面库&lt;/li&gt;
&lt;li&gt;体积小，只有 2KB，且没有任何依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装：&lt;code&gt;npm i --save redux&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;用法：View(DOM，React等) -&amp;gt; Action(描述发生了什么的对象) -&amp;gt; Reducer(纯函数，描述了 action 如何把 state 转变为下一个 state) -&amp;gt; Store(单一数据源) -&amp;gt; 更新 View&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;动机&quot;&gt;&lt;a href=&quot;#动机&quot; class=&quot;headerlink&quot; title=&quot;动机&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/introduction/Motivation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;动机&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;由于前端单页应用开发越来越复杂，JavaScript 需要管理许多不同来源（服务器，用户交互等）的状态变得非常困难 —— 搞不清楚状态在什么地方，在什么时候，由于什么原因变化。&lt;/p&gt;
&lt;p&gt;Redux 是如何解决前端复杂的状态管理？ —— 基于三大原则&lt;/p&gt;
&lt;h1 id=&quot;三大原则&quot;&gt;&lt;a href=&quot;#三大原则&quot; class=&quot;headerlink&quot; title=&quot;三大原则&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/introduction/ThreePrinciples.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;三大原则&lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;单一数据源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规范状态存储，解决传统开发模式中状态存储混乱的问题 ——  基于 jQuery 开发时，很多开发人员都简单的把数据扔到全局命名空间里&lt;/li&gt;
&lt;li&gt;让同构应用开发变得非常容易？ —— 待学习&lt;/li&gt;
&lt;li&gt;单一的状态树，调试更加容易 —— 可以把状态保存到本地，方便查看状态（以前开发时想看状态必须打印日志来查看，导致打印日志代码泛滥）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态是只读的：确保只能通过触发 Action 来修改状态，所有的修改都被集中化处理，且严格按照一个接一个的顺序执行&lt;/p&gt;
&lt;p&gt;  Action 只是普通对象，可以被日志打印，可以在维护时很方便的找到状态改变的来源。&lt;/p&gt;
&lt;p&gt;  相比起来，以往开发在无论生成还是开发环境代码的各个地方都存在着 &lt;code&gt;console.log&lt;/code&gt;（曾今看到一个函数里写了 10 多个日志打印）。而 redux 可以利用中间件，可插拔式的开启或关闭日志打印，可以减少大量的日志打印代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用纯函数来执行修改：Reducer 只能是一些纯函数 —— 便于编写可复用的 reducer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;先前技术&quot;&gt;&lt;a href=&quot;#先前技术&quot; class=&quot;headerlink&quot; title=&quot;先前技术&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/introduction/PriorArt.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;先前技术&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Flux 是一个混合产物，了解 Redux 与其他技术的相似与不同之处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Flux&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相同点：Redux 的灵感来源于 Flux 的几个重要特性，他们都是将模型的更新逻辑全部集中于一个特定的层；&lt;/li&gt;
&lt;li&gt;不同点：Redux 没有 Dispatcher，且不支持多个 Store，只有一个单一的 Store 和一个根级的 reduce 函数；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Elm：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相同点：Elm 的 “updater” 与 Redux 里的 reducer 服务于相同的目的；&lt;/li&gt;
&lt;li&gt;不同点：Elm 是一种函数式编程语言，在执行纯度，静态类型，不可变动性，action 和模式匹配等方面更具优势；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Immutable：Immutable 是一个可实现持久数据结构的 JavaScript 库，可以与 Redux 对接良好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Baobab：Baobab 实现了数据不可变特性的 API —— 用以更新纯 JavaScript 对象，可以在 Redux 中使用，但没有什么优势。&lt;/li&gt;
&lt;li&gt;Rx：Reactive Extensions 是管理复杂异步应用非常优秀的方案，和 Redux 一起使用，可以配合得很好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;生态系统&quot;&gt;&lt;a href=&quot;#生态系统&quot; class=&quot;headerlink&quot; title=&quot;生态系统&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/introduction/Ecosystem.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;生态系统&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;../../images/redux/Redux.png&quot; alt=&quot;Redux&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/introduction/Examples.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例&lt;/a&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;最基本的用法：View，Create Action，Action，Reducer，Store&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/counter-vanilla&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/counter-vanilla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何与界面框架搭配使用，如 redux-react&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/counter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/counter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/todos-with-undo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/todos-with-undo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/todomvc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/todomvc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用的 Redux 模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;实现异步 Action&lt;/p&gt;
&lt;p&gt;  &lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/async&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/async&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 ID 来标准化存储数据实体&lt;/p&gt;
&lt;p&gt;  &lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/shopping-cart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/shopping-cart&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在不同层级将多个 reducer 组合使用&lt;/p&gt;
&lt;p&gt;  &lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/shopping-cart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/shopping-cart&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;深层嵌套树状视图的渲染&lt;/p&gt;
&lt;p&gt;  &lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/tree-view&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/tree-view&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用 Redux Logger 生成日志&lt;/p&gt;
&lt;p&gt;  &lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/shopping-cart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/shopping-cart&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务端渲染：&lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/universal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/universal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;完整的应用示例：&lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/real-world&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/redux/tree/master/examples/real-world&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://cn.redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简介&lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
    
    </summary>
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/categories/Redux/"/>
    
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/tags/Redux/"/>
    
  </entry>
  
  <entry>
    <title>React Hot Loader</title>
    <link href="http://zhbhun.github.io/blog/webpack/React-Hot-Loader/"/>
    <id>http://zhbhun.github.io/blog/webpack/React-Hot-Loader/</id>
    <published>2016-09-05T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;自 Dan Abramov 推出 React Hot Loader 以来，其实现方式随着 React 社区的发展一直在变化。期间，React Hot Loader 被终止过，改用 React Transform。而，如今 React Hot Loader 3 又再次回归。&lt;/p&gt;
&lt;p&gt;这么精彩的变更历史，导致配置方式一大堆，再加上网络上的博文宣传，让初学者看了一脸懵逼。本文根据 GitHub 上的提交记录和变更说明来梳理 React Hot Loader 变更历史，方便大家更好地认识 React Hot Loader，识别网络上的博文是否已经 out 了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://medium.com/@dan_abramov/hot-reloading-in-react-1140438583bf#.f1hgbckb1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hot Reloading in React&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;变更历史&quot;&gt;&lt;a href=&quot;#变更历史&quot; class=&quot;headerlink&quot; title=&quot;变更历史&quot;&gt;&lt;/a&gt;变更历史&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;20140713&lt;/p&gt;
&lt;p&gt; React Hot Loader 0.1.0 诞生，可以查看 Dan Abramov 当时在 YouTube 上发布的视频 &lt;a href=&quot;http://www.youtube.com/watch?v=pw4fKkyPPg8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React live code editing&lt;/a&gt;。开发 React Hot Loader 的灵感来自 &lt;a href=&quot;https://github.com/webpack/react-proxy-loader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-proxy-loader&lt;/a&gt;。实现思想是，在代码更新推送到客户端后，不会销毁已挂在组件实例（不会丢失状态），并更新他们的原型。然而，React Hot Loader 存在不少问题，还处于实验当中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20140815&lt;/p&gt;
&lt;p&gt; React Hot Loader 0.3.0 作为第一个稳定版本发布，支持 react 0.1.1。下面是摘自 React Hot Loader 更新至 0.5.0 的变更日志：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;0.5.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adds source map support, contributed by &lt;a href=&quot;https://github.com/jRiest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jake Riesterer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.4.5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collapse all hot loader code in one line so it doesn’t obscure beginning of file.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.4.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Errors occuring in module definition (such as &lt;code&gt;ReferenceError&lt;/code&gt;) should not disable further reloading (fixes &lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#29&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.4.3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support lowercase &lt;code&gt;react&lt;/code&gt; reference name and usage with ES6 classes (&lt;code&gt;createClass(MyComponent.prototype)&lt;/code&gt;) via &lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/27&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#27&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.4.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Catch errors in modules and log them instead of reloading (fixes &lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/21&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#21&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.4.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use more precise &lt;a href=&quot;https://github.com/gaearon/react-hot-loader/commit/f71c6785131adcc85b91789da0d0a0b9f1a9713f&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;React.createClass&lt;/code&gt; regex&lt;/a&gt; to avoid matching own code when hot loader is applied to all JS files.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.4.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ignore files that contain no &lt;code&gt;createClass&lt;/code&gt; calls (fixes &lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/17&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#17&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Remove the need for pitch loader (fixes &lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/19&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#19&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Improve performance by only using one loader instead of two&lt;/li&gt;
&lt;li&gt;Now that performance is acceptable, remove desktop notifications and &lt;code&gt;notify&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;It is now recommended that you use &lt;code&gt;devtool: &amp;#39;eval&amp;#39;&lt;/code&gt; because it’s much faster and has no downsides anymore&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.3.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid warnings on old browsers with missing &lt;code&gt;Notification&lt;/code&gt; API&lt;/li&gt;
&lt;li&gt;Errors don’t cause page reload anymore&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.3.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use React 0.11。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20141219&lt;/p&gt;
&lt;p&gt; React Hot Loader 升级至 1.0，存在破坏前后兼容性的变化。在过去，React Hot Loader 通过正则表达式查找 createClass 调用，并替换它们的实现，这种方式存在一些问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Doesn’t work when components are created through wrappers;&lt;/li&gt;
&lt;li&gt;Doesn’t work when author calls React differently;&lt;/li&gt;
&lt;li&gt;Causes false positives in React source code comments and elsewhere;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most importantly, won’t work with ES6 classes that will be future of React.&lt;/p&gt;
&lt;p&gt;React Hot Loader 1.0 不再解析源代码，默认只将在原型有声明 render 方法的模块输出（&lt;code&gt;module.exports&lt;/code&gt;）变为可热加载。如果原本就是将每个组件写在单独的文件里的话，就没有任何问题。此外，你可以通过 API &lt;code&gt;module.makeHot&lt;/code&gt; 将任何东西都变得可热加载。要想将一个文件中编写的多个组件，函数内创建的组件，对象中的多个组件等变得可热加载，就可以通过调用 &lt;code&gt;module.makeHot&lt;/code&gt; 来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20150422&lt;/p&gt;
&lt;p&gt; Dan Abramov 发布博客 &lt;a href=&quot;https://medium.com/@dan_abramov/the-death-of-react-hot-loader-765fa791d7c4#.u6zad0n0q&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Death of React Hot Loader&lt;/a&gt; 声明 React Hot Loader 已死。Dan Abramov 对 React Hot Loader 1.0 不是很满意，认为 React Hot Loader 2 应该变得不一样，但还没找到最好的方法实现热加载。下面是他当时提出的一些观点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代替奇怪的热加载 API &lt;code&gt;moduel.makeHot&lt;/code&gt;，使用 ES7 装饰器模式 —— 为了让热加载写起来更简单；&lt;/li&gt;
&lt;li&gt;热加载代码在生成环境编译时去掉，而不用写条件语句来判断当前是否是开发环境；&lt;/li&gt;
&lt;li&gt;React Hot Loader 1.0 只会热加载模块输出已经过时了，遇到高阶组件就不能正常运行；&lt;/li&gt;
&lt;li&gt;React Hot Loader 1.0 操作源代码字符串不够稳定，实现方式难以琢磨，也许可以使用 babel 插件代替；&lt;/li&gt;
&lt;li&gt;&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;后面，react-hot-loader 1.x.x 一直维护到 1.3.0 版本，最后提交时间是 20150829。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.3.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recover from module errors on module level (&lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/pull/187&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#187&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.9&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Silently ignore exports that raise an error when accessed (#114)&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;source-map&lt;/code&gt; dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove React from peerDependencies&lt;/li&gt;
&lt;li&gt;Update React Hot API to support React 0.14 beta 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.7&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preserve CommonJS &lt;code&gt;exports&lt;/code&gt; context in the wrapping closure (&lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/124&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#124&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.6&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix autobinding on newly added methods for &lt;code&gt;createClass&lt;/code&gt;-style classes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix “React is not defined” error&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid updating each class twice in React 0.12&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explicitly exclude &lt;code&gt;react/lib&lt;/code&gt; files from processing. You &lt;strong&gt;should&lt;/strong&gt; use &lt;code&gt;exclude: /node_modules/&lt;/code&gt; in configuration, but at least this doesn’t blow up for those who don’t.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix crash on React 0.13. Now compatible!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don’t try to flatten inheritance chains, as it causes problems with &lt;code&gt;super&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Instead, automatically opt custom base classes into hot reloading as long as they descend from &lt;code&gt;React.Component&lt;/code&gt; (in React 0.13). If your custom base class doesn’t do that but you’d still want to have hot reloading, you need to manually opt it in via &lt;code&gt;module.makeHot&lt;/code&gt; API.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support hot-reloading components without a base class (&lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-api/issues/5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-api#5&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Support hot-reloading inheritance chains (&lt;strong&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-api/issues/10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-api#10&lt;/a&gt;&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;Support using React 0.13 as an external&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.7&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add React 0.13 RC2 to peerDeps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.6&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow React 0.13 RC1&lt;/li&gt;
&lt;li&gt;Better support for ES6 inheritance&lt;/li&gt;
&lt;li&gt;Fix reloading for modules with null prototype chain (&lt;strong&gt;#82&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wrap user code in IEFF to prevent losing &lt;code&gt;&amp;quot;use strict&amp;quot;&lt;/code&gt;. Fixes #75&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix crash when hot-reloading element factory. (Note: React discourages exporting factories.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid warnings on React 0.13&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compatibility with React 0.13.0-beta.1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix edge cases by requiring &lt;code&gt;react/lib/ReactMount&lt;/code&gt; in transformed source files&lt;/li&gt;
&lt;li&gt;Add a warning if &lt;code&gt;ReactMount&lt;/code&gt; doesn’t return anything useful (e.g. when using external React)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.1.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Skipping &lt;code&gt;node_modules&lt;/code&gt; entirely &lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/58&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wasn’t&lt;/a&gt; &lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/55&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;the best idea&lt;/a&gt;. Instead, we now specifically skip &lt;code&gt;node_modules/react/&lt;/code&gt;, &lt;code&gt;node_modules/webpack/&lt;/code&gt; and &lt;code&gt;node_modules/react-hot-loader/&lt;/code&gt;. However you are still &lt;strong&gt;encouraged&lt;/strong&gt; to &lt;a href=&quot;https://github.com/gaearon/react-hot-boilerplate/blob/master/webpack.config.js#L24&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;add &lt;code&gt;exclude: /node_modules/&lt;/code&gt; to your loader config&lt;/a&gt; for best performance.&lt;/li&gt;
&lt;li&gt;Now modules that don’t export any valid React classes in &lt;code&gt;module.exports&lt;/code&gt; or any its properties will not be auto-accepted. This prevents hot loader from trying to handle non-React updates and allows changes in plain JS files to propagate to components that can handle them. For example, this allows &lt;a href=&quot;https://github.com/jsstyles/react-jss&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-jss&lt;/a&gt; mixin to apply hot updates to JSS styles.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.7&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Skip &lt;code&gt;node_modules&lt;/code&gt; entirely. Fixes &lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/54&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#54&lt;/a&gt; on Windows.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.6&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;require(&amp;#39;react-hot-loader/Injection&amp;#39;)&lt;/code&gt; to override Hot Loader behavior. Now you can supply your own way of getting root component instances, so Hot Loader can also work in environment where &lt;code&gt;require(&amp;#39;react/lib/ReactMount&amp;#39;)&lt;/code&gt; is not available (for example, &lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/53&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;when React is used as standalone bundle and not NPM package&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fix stack overflow when hotifying same class twice (&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/52&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#52&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.4&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow both &lt;code&gt;module.exports&lt;/code&gt; and its properties be components (Fixes &lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/50&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#50&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In addition to hotifying &lt;code&gt;module.exports&lt;/code&gt; by default, also hotify all its own properties&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don’t try to hot-replace &lt;code&gt;module.export&lt;/code&gt;ed &lt;code&gt;ReactElement&lt;/code&gt;s&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Delay &lt;code&gt;require&lt;/code&gt;ing &lt;code&gt;ReactMount&lt;/code&gt; to avoid circular dependencies&lt;/li&gt;
&lt;li&gt;Don’t process React or Webpack internals to avoid potential issues&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don’t rely on &lt;code&gt;createClass&lt;/code&gt; regex or any other regex&lt;/li&gt;
&lt;li&gt;Only &lt;code&gt;module.exports&lt;/code&gt; is hot by default&lt;/li&gt;
&lt;li&gt;Supports ES6 classes when they land in React 0.13&lt;/li&gt;
&lt;li&gt;Supports dynamically created classes&lt;/li&gt;
&lt;li&gt;Manual mode&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20150903&lt;/p&gt;
&lt;p&gt; Dan Abramov 开始新的热加载方案实验，并发布了一系列开源项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/babel-plugin-react-transform&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;babel-plugin-react-transform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-transform-hmr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-transform-hmr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-transform-catch-errors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-transform-catch-errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/danmartinez101/babel-preset-react-hmre&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;babel-preset-react-hmre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/gaearon/react-transform-boilerplate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-transform-boilerplate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新的热加载方案采用 babel 插件的方式实现。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20160418&lt;/p&gt;
&lt;p&gt; Dan Abramov 宣布废弃 React Transform，推荐使用 React Hot Loader 3 —— 在 20160417 发布 React Hot Loader 3.0.0-alpha.0。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-boilerplate/pull/61&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Hot Loader 3.0 beta demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/redux/pull/1455&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RFC: remove React Transform from examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/385&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-loader Project status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/danmartinez101/babel-preset-react-hmre/issues/46#issue-180449718&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;babel-preset-react-hmre Project status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-boilerplate/issues/97&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-boilerplate Status/Roadmap of the project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;long-standing issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;配置模板&quot;&gt;&lt;a href=&quot;#配置模板&quot; class=&quot;headerlink&quot; title=&quot;配置模板&quot;&gt;&lt;/a&gt;配置模板&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;a href=&quot;https://github.com/zhbhun/WebpackStudyDemo/tree/master/hot-module-replacement/react-hot-boilerplate-jsx-loader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-boilerplate-jsx-loader&lt;/a&gt;&lt;/del&gt;：已经被废弃，该方案基于 jsx-loader@~0.13.2 和 react-hot-loader@^1.3.0 搭建，两者都已经过时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react@~0.13.3&lt;/li&gt;
&lt;li&gt;jsx-loader@~0.13.2&lt;/li&gt;
&lt;li&gt;react-hot-loader@^1.3.0&lt;/li&gt;
&lt;li&gt;webpack@^1.13.2&lt;/li&gt;
&lt;li&gt;webpack-dev-server@^1.16.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;a href=&quot;https://github.com/zhbhun/WebpackStudyDemo/tree/master/hot-module-replacement/react-hot-boilerplate-patch-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-boilerplate-patch-1&lt;/a&gt;&lt;/del&gt;：已经被废弃，该方案基于 babel6 和 react-hot-loader@^1.3.0 搭建。虽然有 babel6，可以支持最新的 React，但 react-hot-loader@^1.3.0 已经不再维护，热加载始终存在缺陷。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react@^15.3.2&lt;/li&gt;
&lt;li&gt;react-dom@^15.3.2&lt;/li&gt;
&lt;li&gt;babel-core@^6.18.0&lt;/li&gt;
&lt;li&gt;babel-loader@^6.2.5&lt;/li&gt;
&lt;li&gt;babel-preset-es2015@^6.18.0&lt;/li&gt;
&lt;li&gt;babel-preset-react@^6.16.0&lt;/li&gt;
&lt;li&gt;babel-preset-stage-0@^6.16.0&lt;/li&gt;
&lt;li&gt;react-hot-loader@^1.3.0&lt;/li&gt;
&lt;li&gt;webpack@^1.13.2&lt;/li&gt;
&lt;li&gt;webpack-dev-server@^1.16.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;a href=&quot;https://github.com/zhbhun/WebpackStudyDemo/tree/master/hot-module-replacement/react-transform-boilerplate-babel5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-transform-boilerplate-babel5&lt;/a&gt;&lt;/del&gt;：已经被废弃，该方案基于 babel5 和 React Transform 搭建。babel5 已经过时，无法支持最新版本的 react。React Transform 也是属于实验品，已经被 React Hot Loader 3 取缔。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react@~0.14.8&lt;/li&gt;
&lt;li&gt;react-dom@~0.14.8&lt;/li&gt;
&lt;li&gt;babel-core@^5.8.38&lt;/li&gt;
&lt;li&gt;babel-loader@^5.4.2&lt;/li&gt;
&lt;li&gt;babel-plugin-react-transform@^1.1.1&lt;/li&gt;
&lt;li&gt;express@^4.13.3&lt;/li&gt;
&lt;li&gt;react-transform-catch-errors@~0.2.0&lt;/li&gt;
&lt;li&gt;react-transform-hmr@~0.1.6&lt;/li&gt;
&lt;li&gt;react-transform-render-visualizer@~0.4.0&lt;/li&gt;
&lt;li&gt;redbox-react@~1.1.1&lt;/li&gt;
&lt;li&gt;react-transform-debug-inspector@~0.1.3&lt;/li&gt;
&lt;li&gt;webpack@^1.13.2,&lt;/li&gt;
&lt;li&gt;webpack-dev-middleware@^1.8.4,&lt;/li&gt;
&lt;li&gt;webpack-hot-middleware@^2.13.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;a href=&quot;https://github.com/zhbhun/WebpackStudyDemo/tree/master/hot-module-replacement/react-transform-boilerplate-babel6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-transform-boilerplate-babel6&lt;/a&gt;&lt;/del&gt;：已经被废弃，该方案基于 babel6 和 React Transform 搭建。虽然 babel6 可以支持最新版本的 react，但 React Transform 属于实验品，存在缺陷，已经被 React Hot Loader 3 取缔。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react@^15.3.2&lt;/li&gt;
&lt;li&gt;react-dom@^15.3.2&lt;/li&gt;
&lt;li&gt;babel-core@^6.18.0&lt;/li&gt;
&lt;li&gt;babel-loader@^6.2.5&lt;/li&gt;
&lt;li&gt;babel-preset-es2015@^6.18.0&lt;/li&gt;
&lt;li&gt;babel-preset-react@6.16.0&lt;/li&gt;
&lt;li&gt;babel-preset-react-hmre@^1.1.1&lt;/li&gt;
&lt;li&gt;cross-env@^3.1.3&lt;/li&gt;
&lt;li&gt;eventsource-polyfill@~0.9.6&lt;/li&gt;
&lt;li&gt;express@^4.13.3&lt;/li&gt;
&lt;li&gt;rimraf@^2.4.3&lt;/li&gt;
&lt;li&gt;webpack@^1.13.2,&lt;/li&gt;
&lt;li&gt;webpack-dev-middleware@^1.8.4,&lt;/li&gt;
&lt;li&gt;webpack-hot-middleware@^2.13.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/zhbhun/WebpackStudyDemo/tree/master/hot-module-replacement/react-transform-boilerplate-babel6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-hot-boilerplate-next&lt;/a&gt;：最新的配置方案，基于 babel6 和 React Hot Loader 3 搭建，支持 Redux Store 热加载。目前，React Hot Loader 还处于 beta 版本，但已经可以正常使用了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react@^15.3.2&lt;/li&gt;
&lt;li&gt;react-dom@^15.3.2&lt;/li&gt;
&lt;li&gt;babel-core@^6.18.0&lt;/li&gt;
&lt;li&gt;babel-loader@^6.2.5&lt;/li&gt;
&lt;li&gt;babel-preset-es2015@^6.18.0&lt;/li&gt;
&lt;li&gt;babel-preset-react@^6.16.0&lt;/li&gt;
&lt;li&gt;babel-preset-stage-0@^6.16.0&lt;/li&gt;
&lt;li&gt;react-hot-loader@^3.0.0-beta.6&lt;/li&gt;
&lt;li&gt;webpack@^1.13.2&lt;/li&gt;
&lt;li&gt;webpack-dev-server@^1.16.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多参考模板（注意，大多已过时，请认准 React Hot Loader 3）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-hot-loader/tree/master/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/gaearon/react-hot-loader/tree/master/docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/react-transform-boilerplate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/gaearon/react-transform-boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@rajaraodv/webpack-hot-module-replacement-hmr-e756a726a07#.gxei62ixi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Webpack &amp;amp; The Hot Module Replacement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@rajaraodv/webpacks-hmr-react-hot-loader-the-missing-manual-232336dc0d96#.hil92efwy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Webpack’s HMR &amp;amp; React-Hot-Loader — The Missing Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;React-Hot-Loader-3&quot;&gt;&lt;a href=&quot;#React-Hot-Loader-3&quot; class=&quot;headerlink&quot; title=&quot;React Hot Loader 3&quot;&gt;&lt;/a&gt;React Hot Loader 3&lt;/h1&gt;&lt;p&gt;React Transform 和 React Hot Loader 1 基本能够满足组件状态不变的前提下，实时热加载组件的渲染方法，生命周期函数，事件回调函数和非组件代码。但是，随着 React 社区的发展，出现高阶组件的写法，以及 Flux 框架和 Redux 等的发展，现有的热加载方案已经不足以应付了。&lt;/p&gt;
&lt;p&gt;在开发中，我们希望热加载能够做到以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理错误：在修改代码时，很可能导致程序编译失败或运行时错误。我们希望热加载出现的语法错误和运行时异常，能够显示在浏览器控制台里或页面上。并且能够显示异常堆栈信息，方便跟踪到具体出错的代码行。此外，也不会因为热加载出现的程序自身 bug 导致热加载不能继续正常工作。&lt;/li&gt;
&lt;li&gt;支持 React 组件状态不变的前提下，热加载：生命周期函数，事件处理函数，渲染方法，无状态组件，高阶组件等；&lt;/li&gt;
&lt;li&gt;支持 Redux 热加载：初始状态，reducer，action；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;React Hot Loader 3 热加载到底如何？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;虽然，React Hot Loader 3 目前还处于 beta 版，但已经能够投入到开发中使用，而且解决了以前长期存在的问题。下面，参考示例 &lt;a href=&quot;https://github.com/zhbhun/WebpackStudyDemo/tree/master/hot-module-replacement/react-hot-vs-react-transform&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Hot Loader 3 VS React Transform&lt;/a&gt;（配置了两种不同的热加载开发环境，一个是基于 React Transform，另外一个基于 React Hot Loader 3）来感受 React Hot Loader 3 带来的热加载开发体验。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;处理错误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React Transform：会打印错误日志，但 webpack.devtool 要设置为 cheap-eval-source-map 才能跟踪到具体哪一行代码出错。此外，源代码必须手动刷新页面才会更新，导致每次调试必须切回到编辑器中才能查看真正的错误代码；&lt;/li&gt;
&lt;li&gt;React Hot Loader：同上，但 webpack.devtool 要设置为 source-map 才能方便调试跟踪 bug；&lt;/li&gt;
&lt;li&gt;总结：两者都能跟踪到出错的地方，但浏览器里的源代码不能实时更新，有时需要刷新网页才行；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持 React 热加载：组件状态，生命周期函数，事件处理函数，渲染方法，无状态组件，高阶组件；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React Transform：可以保持组件状态，支持热加载生命周期函数，事件处理函数，渲染方法，无状态组件，但不支持高阶组件的容器方法（如 mapStateToProps）；&lt;/li&gt;
&lt;li&gt;React Hot Loader：可以保持组件状态，支持热加载生命周期函数，事件处理函数，渲染方法，无状态组件，高阶组件；&lt;/li&gt;
&lt;li&gt;总结：React Transform 开发一些基本的组件没有问题，但在开发高阶组件时存在问题，而 React Hot Loader 不存在该问题；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;支持 Redux 热加载：初始状态，reducer，action；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;React Transform：不支持热加载初始化状，reducer，action；&lt;/li&gt;
&lt;li&gt;React Hot Loader：支持热加载初始化状，reducer，action；&lt;/li&gt;
&lt;li&gt;总结： React Transform 不支持 redux 热加载，而 React Hot Loader 支持；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;备注：参考 Issue &lt;a href=&quot;https://github.com/gaearon/react-hot-loader/issues/180&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Source maps don’t update&lt;/a&gt;，客户端源代码不能实时更新似乎是 chrome bug 导致的，但 bug 是一年前提的，具体问题还有待调查。就目前来说，一般修改代码导致的错误，根据控制台的错误报告，一般很快地能够判断处错误原因。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;自 Dan Abramov 推出 React Hot Loader 以来，其实现方式随着 React 社区的发展一直在变化。期间，React Hot Loader 被终止过，改用 React Transform。而，如今 React Hot Loader 3 又再次回归。&lt;
    
    </summary>
    
      <category term="Webpack" scheme="http://zhbhun.github.io/blog/categories/Webpack/"/>
    
    
      <category term="Webpack" scheme="http://zhbhun.github.io/blog/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Redux 项目实践</title>
    <link href="http://zhbhun.github.io/blog/redux/Redux-In-Action/"/>
    <id>http://zhbhun.github.io/blog/redux/Redux-In-Action/</id>
    <published>2016-09-04T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;h1 id=&quot;开发思路&quot;&gt;&lt;a href=&quot;#开发思路&quot; class=&quot;headerlink&quot; title=&quot;开发思路&quot;&gt;&lt;/a&gt;开发思路&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;需求：功能，原型&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计：组件拆分，列出组件的状态和动作&lt;/p&gt;
&lt;p&gt; 只要理清楚组件拆分和对应的动作和状态即可，不用详细设计，注意以下几个要点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动作对应功能，而非详细设计 Redux Action&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现：action，reducer，展示组件，容器组件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;action&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;异步功能：请求，成功，失败&lt;/li&gt;
&lt;li&gt;条件判断：是否需要处理，是否可以执行…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;reducer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体数据单独存储（类似数据库），分页数据只存对应 key&lt;/li&gt;
&lt;li&gt;提供额外的数据查询接口，如查询分页数据&lt;/li&gt;
&lt;li&gt;树型嵌套数据优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0#.a6w9fmxpf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Presentational and Container Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;案例&quot;&gt;&lt;a href=&quot;#案例&quot; class=&quot;headerlink&quot; title=&quot;案例&quot;&gt;&lt;/a&gt;案例&lt;/h1&gt;&lt;h2 id=&quot;购物车&quot;&gt;&lt;a href=&quot;#购物车&quot; class=&quot;headerlink&quot; title=&quot;购物车&quot;&gt;&lt;/a&gt;购物车&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/zhbhun/program-demo/blob/master/redux/shopping-cart/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/zhbhun/program-demo/blob/master/redux/shopping-cart/README.md&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Todo&quot;&gt;&lt;a href=&quot;#Todo&quot; class=&quot;headerlink&quot; title=&quot;Todo&quot;&gt;&lt;/a&gt;Todo&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/zhbhun/program-demo/blob/master/redux/todo/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/zhbhun/program-demo/blob/master/redux/todo/README.md&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@rajaraodv/a-guide-for-building-a-react-redux-crud-app-7fe0b8943d0f#.g99gruhdz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Guide For Building A React Redux CRUD App (3-page app)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;开发思路&quot;&gt;&lt;a href=&quot;#开发思路&quot; class=&quot;headerlink&quot; title=&quot;开发思路&quot;&gt;&lt;/a&gt;开发思路&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;需求：功能，原型&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计：组件拆分，列出组件的状态和动作&lt;/p&gt;
&lt;p&gt; 只要理清楚组件拆
    
    </summary>
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/categories/Redux/"/>
    
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/tags/Redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux Action</title>
    <link href="http://zhbhun.github.io/blog/redux/Redux-Action/"/>
    <id>http://zhbhun.github.io/blog/redux/Redux-Action/</id>
    <published>2016-09-02T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;Action 是把数据从应用传到 store 的有效载荷 —— store 数据的唯一来源。&lt;/p&gt;
&lt;p&gt;Action 本质上是 JavaScript 普通对象，Redux 约定 action 内必须使用一个字符串类型的 type 字段来表示将要执行的动作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/basics/Actions.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/recipes/ReducingBoilerplate.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reducing Boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/acdlite/flux-standard-action&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flux-standard-action&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h1&gt;&lt;p&gt;Action 一般是通过 store.dispatch() 来传给 store。下面以 Todo 示例的 ADD_TODO 为例，演示如何写好 Action。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;store.dispatch({ type: &amp;#39;ADD_TODO&amp;#39;, text: &amp;#39;xxx&amp;#39; })&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但像上面这样内联创建 action，是无法重用 action type 的，而且需要重复编写同一类型 action 的生成代码。&lt;/p&gt;
&lt;h2 id=&quot;Action-creators&quot;&gt;&lt;a href=&quot;#Action-creators&quot; class=&quot;headerlink&quot; title=&quot;Action creators&quot;&gt;&lt;/a&gt;Action creators&lt;/h2&gt;&lt;p&gt;考虑代码的重用性，我们使用 action 创建函数来创建 action，并输出 action Type。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// app/actions/index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export const ADD_TODO = &amp;apos;ADD_TODO&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export const addTodo = (text) =&amp;gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: ADD_TODO,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text,   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// app/containers/xxx.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123; addTodo &amp;#125; from &amp;apos;../action&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;store.dispatch(addTodo(&amp;apos;xxx&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Action-type-in-separate-module&quot;&gt;&lt;a href=&quot;#Action-type-in-separate-module&quot; class=&quot;headerlink&quot; title=&quot;Action type in separate module&quot;&gt;&lt;/a&gt;Action type in separate module&lt;/h2&gt;&lt;p&gt;当应用规模越来越大时，建议使用单独的模块或文件来存放 action。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;便于维护命名一致性；&lt;/li&gt;
&lt;li&gt;便于维护代码：查询所有现存的 actions，查看 action 的添加，删除和修改记录；&lt;/li&gt;
&lt;li&gt;便于发现拼写错误；&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// app/constants/ActionTypes.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ADD_TODO = &lt;span class=&quot;string&quot;&gt;&#39;ADD_TODO&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// app/actions/index.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; ADD_TODO &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../constants/ActionTypes&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; action = (text) =&amp;gt; (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: ADD_TODO,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text,   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// app/containers/xxx.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Generating-Action-Creators&quot;&gt;&lt;a href=&quot;#Generating-Action-Creators&quot; class=&quot;headerlink&quot; title=&quot;Generating Action Creators&quot;&gt;&lt;/a&gt;Generating Action Creators&lt;/h2&gt;&lt;p&gt;写简单的 action creator 很容易让人厌烦，且往往最终生成多余的样板代码。&lt;/p&gt;
&lt;p&gt;我们可以写一个用于生成 action creator 的函数：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeActionCreator&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type, ...argNames&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;...args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; action = &amp;#123; type &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    argNames.forEach((arg, index) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action[argNames[index]] = args[index]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; action;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ADD_TODO = &lt;span class=&quot;string&quot;&gt;&#39;ADD_TODO&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; EDIT_TODO = &lt;span class=&quot;string&quot;&gt;&#39;EDIT_TODO&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; REMOVE_TODO = &lt;span class=&quot;string&quot;&gt;&#39;REMOVE_TODO&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; addTodo = makeActionCreator(ADD_TODO, &lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; editTodo = makeActionCreator(EDIT_TODO, &lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; removeTodo = makeActionCreator(REMOVE_TODO, &lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一些工具库也可以帮助生成 action creator&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pauldijou/redux-act&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux-act&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/acdlite/redux-actions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux-actions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Async-Action-Creators&quot;&gt;&lt;a href=&quot;#Async-Action-Creators&quot; class=&quot;headerlink&quot; title=&quot;Async Action Creators&quot;&gt;&lt;/a&gt;Async Action Creators&lt;/h2&gt;&lt;p&gt;实现原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/advanced/AsyncActions.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Async Actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/advanced/AsyncFlow.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;异步数据流&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/advanced/Middleware.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Middleware&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/recipes/ReducingBoilerplate.html#异步-action-creators&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;循序渐进对比异步动作的写法&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;没有中间件：必须通过组件提供 dispatch 和 state 来实现判断是否有数据，开始加载（设置 loading 状态），加载成功和加载失败这些逻辑；&lt;/li&gt;
&lt;li&gt;使用中间件 redux-thunk：直接在 action creator 返回函数的参数里获取 dispatch 和 state，便于代码重用，写出表达更清晰的、潜在的异步 action creators；&lt;/li&gt;
&lt;li&gt;定制中间件：统一约定服务器端接口返回数据格式，将异步 action creator 模式泛化，大大减少重复代码；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Action Creator 命名技巧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;loadData/loadDataIfNeeded: function&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loadDataRequest: { type: &amp;#39;LOAD_DATA_REQUEST&amp;#39; }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loadDataSuccess: { type: &amp;#39;LOAD_DATA_SUCCESS&amp;#39;, response }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loadDataFailure: { type: &amp;#39;LOAD_DATA_FAILURE&amp;#39;, error }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相关实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gaearon/redux-thunk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux-thunk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/acdlite/redux-promise&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux-promise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pburtchaell/redux-promise-middleware&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux-promise-middleware&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模板代码&lt;/li&gt;
&lt;li&gt;乐观更新&lt;/li&gt;
&lt;li&gt;错误处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://react-china.org/t/redux/8761&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux异步方案选型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/acdlite/flux-standard-action/issues/7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Optimistic updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Action 是把数据从应用传到 store 的有效载荷 —— store 数据的唯一来源。&lt;/p&gt;
&lt;p&gt;Action 本质上是 JavaScript 普通对象，Redux 约定 action 内必须使用一个字符串类型的 type 字段来表示将要执行的动作。&lt;/p&gt;
&lt;u
    
    </summary>
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/categories/Redux/"/>
    
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/tags/Redux/"/>
    
  </entry>
  
  <entry>
    <title>Redux Reducer</title>
    <link href="http://zhbhun.github.io/blog/redux/Redux-Reducer/"/>
    <id>http://zhbhun.github.io/blog/redux/Redux-Reducer/</id>
    <published>2016-09-02T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;h1 id=&quot;状态结构&quot;&gt;&lt;a href=&quot;#状态结构&quot; class=&quot;headerlink&quot; title=&quot;状态结构&quot;&gt;&lt;/a&gt;状态结构&lt;/h1&gt;&lt;p&gt;设计原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把应用的 state 想像成数据库；&lt;/li&gt;
&lt;li&gt;尽量将业务数据和 UI 相关的状态分开；&lt;/li&gt;
&lt;li&gt;尽可能地把 state 范式化，不存在嵌套，即把所有数据放到一个对象里，每个数据以 ID 为主键，不同实体或列表间通过 ID 相互引用数据；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考示例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/redux/tree/master/examples/real-world&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;real-world&lt;/a&gt;：将业务数据放在 entities 对象中，以业务名称作为 key 存放业务对象，每个业务对象都以业务数据 id 为 key，存放对应的业务数据。页面相关的数据和状态存放在 pagination 对象中，以页面名称作为 key 存放页面对象，每个页面对象中都使用 id 来引用业务数据。&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;处理-Action&quot;&gt;&lt;a href=&quot;#处理-Action&quot; class=&quot;headerlink&quot; title=&quot;处理 Action&quot;&gt;&lt;/a&gt;处理 Action&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;只要传入参数相同，返回计算得到的下一个 state 就一定相同。没有特殊情况、没有副作用，没有 API 请求、没有变量修改，单纯执行计算。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁止修改传入参数；&lt;/li&gt;
&lt;li&gt;禁止执行有副作用的操作，如 API 请求和路由跳转；&lt;/li&gt;
&lt;li&gt;禁止调用非纯函数，如 Date.now() 或 Math.random()；&lt;/li&gt;
&lt;li&gt;遇到未知的 action 时，一定要返回旧的 state；&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不要修改 state：利用 Object.assgin 或 ES7 对象展开运算符创建 state 副本，也可以使用帮助类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/update.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Immutability Helpers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substantial/updeep&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;updeep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://facebook.github.io/immutable-js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Immutable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;备注：处理 Action 的函数之所以称作 reducer 是因为它将被传递给 Array.prototype.reduce(reducer, ?initialValue) 方法。&lt;/p&gt;
&lt;h1 id=&quot;拆分-Reducer&quot;&gt;&lt;a href=&quot;#拆分-Reducer&quot; class=&quot;headerlink&quot; title=&quot;拆分 Reducer&quot;&gt;&lt;/a&gt;拆分 Reducer&lt;/h1&gt;&lt;p&gt;如果将所有状态更新都放在一个模块里，代码会变得非常冗长。而 state 中有的的字段是相互独立的，有的又是相互依赖的，我们可以将相互独立的字段分到单独的模块里更新，例如示例 Todo 的 todos 和 visibilityFilter 是相互独立的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123; combineReducers &amp;#125; from &amp;apos;redux&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import * as reducers from &amp;apos;./reducers&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const todoApp = combineReducers(reducers)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;范式化-Store&quot;&gt;&lt;a href=&quot;#范式化-Store&quot; class=&quot;headerlink&quot; title=&quot;范式化 Store&quot;&gt;&lt;/a&gt;范式化 Store&lt;/h1&gt;&lt;p&gt;前面在设计状态结构时，提到尽可能地把 state 范式化，我们可以借助一些工具帮我们简化范式化的实现。&lt;/p&gt;
&lt;h2 id=&quot;统一-key-名称格式&quot;&gt;&lt;a href=&quot;#统一-key-名称格式&quot; class=&quot;headerlink&quot; title=&quot;统一 key 名称格式&quot;&gt;&lt;/a&gt;统一 key 名称格式&lt;/h2&gt;&lt;p&gt;问题：服务端返回数据的 key 命名规则可能各不一样，有些以下划线来分割命名，有些又是采用驼峰式的命名规则。为了统一命名规则，需要转换返回的数据。&lt;/p&gt;
&lt;p&gt;解决方案：&lt;a href=&quot;https://github.com/domchristie/humps&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;humps&lt;/a&gt; 是一个连接符命名和驼峰命名之间的转换工具。&lt;/p&gt;
&lt;h2 id=&quot;扁平化数据&quot;&gt;&lt;a href=&quot;#扁平化数据&quot; class=&quot;headerlink&quot; title=&quot;扁平化数据&quot;&gt;&lt;/a&gt;扁平化数据&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/paularmstrong/normalizr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;normalizr&lt;/a&gt;：统一转为类似下面的数据结构&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;result&amp;quot;: String/Object,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;entities&amp;quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [业务数据名称]: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [业务数据唯一标识符]: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/reselect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/reactjs/reselect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cn.redux.js.org/docs/recipes/ReducingBoilerplate.html#reducers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cn.redux.js.org/docs/recipes/ReducingBoilerplate.html#reducers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;状态结构&quot;&gt;&lt;a href=&quot;#状态结构&quot; class=&quot;headerlink&quot; title=&quot;状态结构&quot;&gt;&lt;/a&gt;状态结构&lt;/h1&gt;&lt;p&gt;设计原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把应用的 state 想像成数据库；&lt;/li&gt;
&lt;li&gt;尽量将业务数据和 UI 相关的状
    
    </summary>
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/categories/Redux/"/>
    
    
      <category term="Redux" scheme="http://zhbhun.github.io/blog/tags/Redux/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio Code</title>
    <link href="http://zhbhun.github.io/blog/editor/Visual-Studio-Code/"/>
    <id>http://zhbhun.github.io/blog/editor/Visual-Studio-Code/</id>
    <published>2016-08-31T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;Visual Studio Code 是一个运行于 Mac OS X、Windows和 Linux 之上的，针对于编写现代 Web 和云应用的跨平台源代码编辑器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方文档：&lt;a href=&quot;https://code.visualstudio.com/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.visualstudio.com/docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kaiye/kaiye.github.com/issues/14&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code 配置指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/75614a581391&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code，完美的编辑器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/VSCode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://marketplace.visualstudio.com/VSCode&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;语言&quot;&gt;&lt;a href=&quot;#语言&quot; class=&quot;headerlink&quot; title=&quot;语言&quot;&gt;&lt;/a&gt;语言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=redhat.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Language Support for Java(TM) by Red Hat&lt;/a&gt;：支持 Java 语言&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ESLint&lt;/a&gt;：集成 ESLint&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stylelint&lt;/a&gt;： CSS/SCSS/Less 检查器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=mkaufman.HTMLHint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTMLHint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dzannotti.vscode-babel-coloring&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel ES6/ES7&lt;/a&gt;：增加 es6/es7 语法高亮&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Snippets&quot;&gt;&lt;a href=&quot;#Snippets&quot; class=&quot;headerlink&quot; title=&quot;Snippets&quot;&gt;&lt;/a&gt;Snippets&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Angular 2 TypeScript Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript (ES6) code snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML CSS Class Completion&lt;/a&gt;：根据 CSS 文件自动完成 HTML class 名称&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=wcwhitehead.bootstrap-3-snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bootstrap 3 Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=xabikos.ReactSnippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reactjs code snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=donjayamanne.jquerysnippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery Code Snippets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;编辑&quot;&gt;&lt;a href=&quot;#编辑&quot; class=&quot;headerlink&quot; title=&quot;编辑&quot;&gt;&lt;/a&gt;编辑&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vscodevim.vim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vim&lt;/a&gt;：提供了 vim 快捷键绑定&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=joelday.docthis&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Document This&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Path Intellisense&lt;/a&gt;：自动完成文件路径&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;npm Intellisense&lt;/a&gt;：自动完成 npm 模块引入&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbankier.vscode-instant-markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instant Markdown&lt;/a&gt;：实时预览 markdown&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Auto Close Tag&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;调试&quot;&gt;&lt;a href=&quot;#调试&quot; class=&quot;headerlink&quot; title=&quot;调试&quot;&gt;&lt;/a&gt;调试&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Debugger for Chrome&lt;/a&gt;：在 chrome 中调试代码&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vsmobile.vscode-react-native&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native Tools&lt;/a&gt;：提供了 React Native 环境开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;版本&quot;&gt;&lt;a href=&quot;#版本&quot; class=&quot;headerlink&quot; title=&quot;版本&quot;&gt;&lt;/a&gt;版本&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git History (git log) &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;格式化&quot;&gt;&lt;a href=&quot;#格式化&quot; class=&quot;headerlink&quot; title=&quot;格式化&quot;&gt;&lt;/a&gt;格式化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;beautify&lt;/a&gt;：支持 javascript, JSON, CSS, Sass, and HTML &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=lonefy.vscode-JS-CSS-HTML-formatter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JS-CSS-HTML Formatter&lt;/a&gt;：JS, CSS, HTML, JSON&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EditorConfig for VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=DotJoshJohnson.xml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XML Tools&lt;/a&gt;：格式化 XML&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code Settings Sync&lt;/a&gt;：同步 VSC 配置&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=wcwhitehead.bootstrap-3-snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spelling and Grammar Checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=eg2.vscode-npm-script&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;npm Script Runner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=humao.rest-client&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;REST Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=anseki.vscode-color&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Color Picker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code Runner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=cssho.vscode-svgviewer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVG Viewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=qinjia.view-in-browser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View In Browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=be5invis.vscode-icontheme-nomo-dark&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nomo Dark Icon Theme&lt;/a&gt;：&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material-theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;h2 id=&quot;总是询问-Git-仓库的登陆用户和密码&quot;&gt;&lt;a href=&quot;#总是询问-Git-仓库的登陆用户和密码&quot; class=&quot;headerlink&quot; title=&quot;总是询问 Git 仓库的登陆用户和密码&quot;&gt;&lt;/a&gt;总是询问 Git 仓库的登陆用户和密码&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/34400272/visual-studio-code-always-asking-for-git-credentials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code always asking for git credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/caching-your-github-password-in-git/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caching your GitHub password in Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;设置&quot;&gt;&lt;a href=&quot;#设置&quot; class=&quot;headerlink&quot; title=&quot;设置&quot;&gt;&lt;/a&gt;设置&lt;/h1&gt;&lt;h2 id=&quot;文件图标&quot;&gt;&lt;a href=&quot;#文件图标&quot; class=&quot;headerlink&quot; title=&quot;文件图标&quot;&gt;&lt;/a&gt;文件图标&lt;/h2&gt;&lt;p&gt;从 1.5 版本开始，VSC 支持文件图标，具体参考 &lt;a href=&quot;https://code.visualstudio.com/blogs/2016/09/08/icon-themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;File and Folder Icons in VS Code!&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;备注：旧版本使用 &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=robertohuertasm.vscode-icons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vscode-icons&lt;/a&gt; 实现文件图标。&lt;/p&gt;
&lt;h1 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h1&gt;&lt;h2 id=&quot;窗口&quot;&gt;&lt;a href=&quot;#窗口&quot; class=&quot;headerlink&quot; title=&quot;窗口&quot;&gt;&lt;/a&gt;窗口&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl+b：开闭侧边栏&lt;/li&gt;
&lt;li&gt;ctrl+\：增加一栏打开的文件窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码导航&quot;&gt;&lt;a href=&quot;#代码导航&quot; class=&quot;headerlink&quot; title=&quot;代码导航&quot;&gt;&lt;/a&gt;代码导航&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl+p&lt;/li&gt;
&lt;li&gt;ctrl+shift+o：显示符号，可同 sublime 改为 ctrl+r&lt;/li&gt;
&lt;li&gt;ctrl+t：查找并且导航到符号，类似于 sublime 的 ctrl+;&lt;/li&gt;
&lt;li&gt;f12：查看定义&lt;/li&gt;
&lt;li&gt;ctrl+alt+-：返回&lt;/li&gt;
&lt;li&gt;ctrl+shift+-：前进&lt;/li&gt;
&lt;li&gt;… &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Visual Studio Code 是一个运行于 Mac OS X、Windows和 Linux 之上的，针对于编写现代 Web 和云应用的跨平台源代码编辑器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方文档：&lt;a href=&quot;https://code.visualstudio.co
    
    </summary>
    
      <category term="Editor" scheme="http://zhbhun.github.io/blog/categories/Editor/"/>
    
    
      <category term="Editor" scheme="http://zhbhun.github.io/blog/tags/Editor/"/>
    
  </entry>
  
  <entry>
    <title>跨站脚本攻击</title>
    <link href="http://zhbhun.github.io/blog/security/Cross-Site-Scripting/"/>
    <id>http://zhbhun.github.io/blog/security/Cross-Site-Scripting/</id>
    <published>2016-08-02T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;什么是跨站脚本？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跨站脚本（Cross-site scripting，通常简称为XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。 —— 摘自《维基百科》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;危害&quot;&gt;&lt;a href=&quot;#危害&quot; class=&quot;headerlink&quot; title=&quot;危害&quot;&gt;&lt;/a&gt;危害&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;盗取信息&lt;ul&gt;
&lt;li&gt;盗用 cookie，获取敏感信息；&lt;/li&gt;
&lt;li&gt;键盘监听&lt;/li&gt;
&lt;li&gt;伪造表单&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;恶意操作&lt;ul&gt;
&lt;li&gt;利用可被攻击的域受到其他域信任的特点，以受信任来源的身份请求一些平时不允许的操作，如进行不当的投票活动；&lt;/li&gt;
&lt;li&gt;利用 iframe、frame、XMLHttpRequest 或上述 Flash 等方式，以（被攻击）用户的身份执行一些管理动作，或执行一些一般的如发微博、加好友、发私信等操作；&lt;/li&gt;
&lt;li&gt;在访问量极大的一些页面上的XSS可以攻击一些小型网站，实现 DDoS 攻击的效果；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;越权&lt;ul&gt;
&lt;li&gt;利用植入Flash，通过 crossdomain 权限设置进一步获取更高权限；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;方式&quot;&gt;&lt;a href=&quot;#方式&quot; class=&quot;headerlink&quot; title=&quot;方式&quot;&gt;&lt;/a&gt;方式&lt;/h1&gt;&lt;p&gt;按照 XSS 来源，可以将 XSS 攻击方式分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Persistent XSS：恶意代码来自数据库&lt;/li&gt;
&lt;li&gt;Reflected XSS：恶意代码来自受害者请求&lt;/li&gt;
&lt;li&gt;DOM-based XSS：客户端代码漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能存在 XSS 的标签或属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;script&lt;/li&gt;
&lt;li&gt;事件属性&lt;/li&gt;
&lt;li&gt;链接 href&lt;/li&gt;
&lt;li&gt;iframe src&lt;/li&gt;
&lt;li&gt;image src&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;防御&quot;&gt;&lt;a href=&quot;#防御&quot; class=&quot;headerlink&quot; title=&quot;防御&quot;&gt;&lt;/a&gt;防御&lt;/h1&gt;&lt;p&gt;防御 XSS 攻击的方法如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁用浏览器脚本；&lt;/li&gt;
&lt;li&gt;将重要的 cookie 标记为 http only；&lt;/li&gt;
&lt;li&gt;使用 HTTP 头指定类型；&lt;/li&gt;
&lt;li&gt;转义&lt;ul&gt;
&lt;li&gt;PHP：htmlentities()，htmlspecialchars()；&lt;/li&gt;
&lt;li&gt;Python：cgi.escape()；&lt;/li&gt;
&lt;li&gt;ASP：Server.HTMLEncode；&lt;/li&gt;
&lt;li&gt;ASP.NET：Server.HtmlEncode()，Microsoft Anti-Cross Site Scripting Library；&lt;/li&gt;
&lt;li&gt;Java：xssprotect (Open Source Library)；&lt;/li&gt;
&lt;li&gt;Node.js：node-validator；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;验证&lt;ul&gt;
&lt;li&gt;检查用户输入数据类型和规则；&lt;/li&gt;
&lt;li&gt;过滤或移除特殊的 HTML 标签；&lt;/li&gt;
&lt;li&gt;过滤 JavaScript 事件的标签；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据XSS 攻击方法的不同，要采用不同的方法防御，具体防御策略如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通文本参数：有业务需要的话，做些正则表达式验证，例如：昵称使用正则表达式验证，只能包含特定字符，并且显示的时候需要转义&lt;/li&gt;
&lt;li&gt;多行文本参数：显示时转义&lt;/li&gt;
&lt;li&gt;富文本参数：过滤危险标签(使用白名单)，显示时转义&lt;/li&gt;
&lt;li&gt;coolie：http only&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;备注：显示可能在服务端渲染，也可能在客户端渲染，根据具体程序语言做相应处理。&lt;/p&gt;
&lt;p&gt;疑问：存储数据前转义 VS 显示前转义？&lt;/p&gt;
&lt;p&gt;存储数据前转义，显示就不需要再转义，但这样数据库的数据不是用户真实输入的数据，不便于移植（例如，将数据导出到 CSV）。并且如果需要重新编辑转义数据的化，还需要反转义。&lt;/p&gt;
&lt;p&gt;此外，存储数据前转义只能防御 Persistent XSS 漏洞，要避免 Reflected XSS 和 DOM-based XSS，还是要做显示前转义。&lt;/p&gt;
&lt;h1 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h1&gt;&lt;h1 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h1&gt;&lt;p&gt;转义&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://commons.apache.org/lang/api-2.6/org/apache/commons/lang/StringEscapeUtils.html#escapeHtml%28java.lang.String%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StringEscapeUtils.escapeHtml()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/util/HtmlUtils.html#htmlEscape%28java.lang.String%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HtmlUtils.htmlEscape()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2658922/xss-prevention-in-jsp-servlet-web-application&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSTL &lt;c:out&gt; &lt;/c:out&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/fn/escapeXml.fn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EL fn:escapeXml()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过滤&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsoup.org/cookbook/cleaning-html/whitelist-sanitizer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sanitize untrusted HTML (to prevent XSS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://remark.overzealous.com/manual/usage.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;remark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://code.google.com/archive/p/xssprotect/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xssprotect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/OWASP/java-html-sanitizer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;java-html-sanitizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/finn-no/xss-html-filter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xss-html-filter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考文献&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2658922/xss-prevention-in-jsp-servlet-web-application&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XSS prevention in JSP/Servlet web application&lt;/a&gt;：如何在 JSP 中应对 XSS 攻击。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5769847/how-to-avoid-apps-from-xss-attacks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to avoid apps from XSS attacks?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/7505387/im-looking-for-a-java-html-encoder&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;I’m looking for a Java HTML encoder [closed]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/832620/stripping-html-tags-in-java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stripping HTML tags in Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;JavaScript-Node-js&quot;&gt;&lt;a href=&quot;#JavaScript-Node-js&quot; class=&quot;headerlink&quot; title=&quot;JavaScript/Node.js&quot;&gt;&lt;/a&gt;JavaScript/Node.js&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;React：自带&lt;/li&gt;
&lt;li&gt;JQuery&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1219860/html-encoding-in-javascript-jquery&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML-encoding in JavaScript/jQuery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cure53/H5SC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;H5SC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/leizongmin/js-xss&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;js-xss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cure53/DOMPurify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DOMPurify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Netflix/sleepy-puppy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sleepy-puppy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cure53/XSSChallengeWiki/wiki&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XSSChallengeWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DanMcInerney/xsscrapy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xsscrapy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yahoo/xss-filters&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xss-filters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/koto/xsschef&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xsschef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/firesunCN/BlueLotus_XSSReceiver&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BlueLotus_XSSReceiver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://excess-xss.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Excess XSS&lt;/a&gt;：XSS 研究&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://xss-game.appspot.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google XSS challenge&lt;/a&gt;：XSS 攻击游戏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://gist.github.com/pbssubhash/2f99644a4f24e8fe6b3e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google XSS challenge solutions..&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/TankXiao/archive/2012/03/21/2337194.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web安全测试之XSS&lt;/a&gt;：XSS 介绍和防御&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/Cross-site_Scripting_(XSS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cross-site Scripting (XSS)&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OWASP XSS (Cross Site Scripting) Prevention Cheat Sheet&lt;/a&gt;：XSS 攻击防御备忘单&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.acunetix.com/websitesecurity/cross-site-scripting/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cross-site Scripting (XSS) Attack&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cgisecurity.com/xss-faq.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Cross-Site Scripting (XSS) FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cnodejs.org/topic/50463565329c5139760c34a1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于XSS（跨站脚本攻击）和CSRF（跨站请求伪造）&lt;/a&gt;：实战介绍 XSS 攻击&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://whitton.io/articles/xss-on-facebook-via-png-content-types/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;An XSS on Facebook via PNGs &amp;amp; Wonky Content Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.freebuf.com/articles/web/40520.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XSS的原理分析与解剖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.com/about/appsecurity/learning/xss/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cross-site scripting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;TODO&quot;&gt;&lt;a href=&quot;#TODO&quot; class=&quot;headerlink&quot; title=&quot;TODO&quot;&gt;&lt;/a&gt;TODO&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nVisium/xssValidator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xssValidator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/coverity/coverity-security-library&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coverity-security-library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jaq.alibaba.com/community/art/show?articleid=518&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Content Security Policy 入门教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;什么是跨站脚本？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;跨站脚本（Cross-site scripting，通常简称为XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。 —— 摘自《维基百科》&lt;
    
    </summary>
    
      <category term="Security" scheme="http://zhbhun.github.io/blog/categories/Security/"/>
    
    
      <category term="Security" scheme="http://zhbhun.github.io/blog/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>Java 异常</title>
    <link href="http://zhbhun.github.io/blog/java/Java-Exception/"/>
    <id>http://zhbhun.github.io/blog/java/Java-Exception/</id>
    <published>2016-07-12T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;h1 id=&quot;什么是异常&quot;&gt;&lt;a href=&quot;#什么是异常&quot; class=&quot;headerlink&quot; title=&quot;什么是异常&quot;&gt;&lt;/a&gt;什么是异常&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;异常情形是指阻止当前方法或者作用域继续执行的问题。——《Think in Java》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;怎么处理异常&quot;&gt;&lt;a href=&quot;#怎么处理异常&quot; class=&quot;headerlink&quot; title=&quot;怎么处理异常&quot;&gt;&lt;/a&gt;怎么处理异常&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;通过函数的返回值来告诉函数调用者出现异常&lt;/li&gt;
&lt;li&gt;通过某种异常处理机制来告诉函数调用者出现异常，例如 Java 的异常处理机制&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;为什么使用异常处理机制？&quot;&gt;&lt;a href=&quot;#为什么使用异常处理机制？&quot; class=&quot;headerlink&quot; title=&quot;为什么使用异常处理机制？&quot;&gt;&lt;/a&gt;为什么使用异常处理机制？&lt;/h1&gt;&lt;p&gt;异常作为返回值带来的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;很容易与正常的返回值混淆；&lt;/li&gt;
&lt;li&gt;需要约定返回值的数据结构，降低代码可阅读性；&lt;/li&gt;
&lt;li&gt;如果函数嵌套调用且最里层函数出现异常，则需要每个调用函数都处理异常；&lt;/li&gt;
&lt;li&gt;由调用函数来分析异常，这要求程序员对库函数有很深的了解；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Java 的异常处理机制在程序发生异常时，强制终止程序继续执行，记录异常信息并跳转至最近的异常处理程序去处理异常，如果当前函数作用域内没有找到可用的异常处理程序，则转向外层调用函数寻找可用的异常处理程序。&lt;/p&gt;
&lt;h1 id=&quot;Java-的异常体系&quot;&gt;&lt;a href=&quot;#Java-的异常体系&quot; class=&quot;headerlink&quot; title=&quot;Java 的异常体系&quot;&gt;&lt;/a&gt;Java 的异常体系&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/blog/381060/201311/22185952-834d92bc2bfe498f9a33414cc7a2c8a4.png&quot; alt=&quot;Java 异常&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Throwable：java语言中所有错误和异常的超类；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Error VS Exception：前者为错误，是程序无法处理的，出现这种情况你唯一能做的就是听之任之，交由 JVM 来处理，不过 JVM 在大多数情况下会选择终止线程。Exception 是程序可以处理的异常，分为两种 CheckedException（受捡异常），一种是 UncheckedException（不受检异常）；&lt;/li&gt;
&lt;li&gt;CheckedException VS UncheckedException：CheckException 发生在编译阶段，必须要使用try…catch（或者throws）否则编译不通过。UncheckedException 发生在运行期，具有不确定性；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见的运行时异常&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NullPointerException&lt;/li&gt;
&lt;li&gt;ClassNotFoundException&lt;/li&gt;
&lt;li&gt;ClassCastException&lt;/li&gt;
&lt;li&gt;ArithmeticException&lt;/li&gt;
&lt;li&gt;ArrayIndexOutOfBoundsException&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;异常处理&quot;&gt;&lt;a href=&quot;#异常处理&quot; class=&quot;headerlink&quot; title=&quot;异常处理&quot;&gt;&lt;/a&gt;异常处理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;try…catch&lt;/li&gt;
&lt;li&gt;try…catch…finally&lt;/li&gt;
&lt;li&gt;throw&lt;/li&gt;
&lt;li&gt;throws&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;自定义异常&quot;&gt;&lt;a href=&quot;#自定义异常&quot; class=&quot;headerlink&quot; title=&quot;自定义异常&quot;&gt;&lt;/a&gt;自定义异常&lt;/h1&gt;&lt;p&gt;TODO&lt;/p&gt;
&lt;h1 id=&quot;异常链&quot;&gt;&lt;a href=&quot;#异常链&quot; class=&quot;headerlink&quot; title=&quot;异常链&quot;&gt;&lt;/a&gt;异常链&lt;/h1&gt;&lt;p&gt;TODO&lt;/p&gt;
&lt;p&gt;TODO 异常链的打印信息&lt;/p&gt;
&lt;h1 id=&quot;最佳实践&quot;&gt;&lt;a href=&quot;#最佳实践&quot; class=&quot;headerlink&quot; title=&quot;最佳实践&quot;&gt;&lt;/a&gt;最佳实践&lt;/h1&gt;&lt;p&gt;下面是错误使用 Java 异常处理机制的示例：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Connection conn = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Statement stat = conn.createStatement();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ResultSet rs = stat.executeQuery(&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (rs.next())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    conn.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    out.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception ex)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ex.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; ex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽可能减小 try 块，虽然将一大块代码包含在 try 里面，比较容易实现，但不利于分析和维护代码（后期不知道哪一行代码可能抛出异常，以及产生什么类型的异常）；&lt;/li&gt;
&lt;li&gt;保证所有资源都被正确释放，充分利用 finally 关键字；&lt;/li&gt;
&lt;li&gt;catch 语句尽量指定具体的异常类型，然后针对特定类型的异常做特定的处理，避免使用 Exception 处理所有可能出现的异常；&lt;/li&gt;
&lt;li&gt;异常捕获后的处理方案&lt;ul&gt;
&lt;li&gt;自己处理不了，就不要捕获异常；&lt;/li&gt;
&lt;li&gt;抛出封装异常；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在异常处理模块中提供适量的错误原因信息，组织错误信息使其易于理解和阅读 —— 类，方法，异常；&lt;/li&gt;
&lt;li&gt;不要在 finally 返回值；&lt;/li&gt;
&lt;li&gt;不要在构造函数中抛出异常；&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;高级用法&quot;&gt;&lt;a href=&quot;#高级用法&quot; class=&quot;headerlink&quot; title=&quot;高级用法&quot;&gt;&lt;/a&gt;高级用法&lt;/h1&gt;&lt;p&gt;一个用例通常由一个主事件流和 n 个异常流组成，异常流可能发生在主事件流的过程，而 try 语句里面实现的是主事件流，而 catch 里面实现的是异常流，在这里异常不代表程序出现了异常或者错误，它只是面向对象化的业务逻辑控制方法。&lt;/p&gt;
&lt;p&gt;在实际开发中，可以设计好异常类层次，这些异常类并不都表示程序出现了异常或错误，只是代表非主事件流的发生，用来进行那些分之流程的控制。例如，下面是登陆方法的实现方案对比，可以看出一个设计好的异常类层次的优势。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;boolean login(String username, String password)：只能返回 true 或 false 表示是否登陆成功；&lt;/li&gt;
&lt;li&gt;int login(String username, String password)：1 表示成功登陆，0 表示找不到用户，-1 表示密码不对。。。调用该方法时必须记住 login 返回代码的含义，并使用 if…else 来判断不同的执行结果；&lt;/li&gt;
&lt;li&gt;User login(String username, String password) throws UserNotFoundException, PasswordNotMatchException：登陆方法返回成功登陆后的用户信息，在登陆失败的时候抛出相应的异常，调用方法直接使用受检异常来处理不同的执行结果，借助 IDE 开发起来非常方便；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;争议：关于 Java 的受检异常，存在着很多反对意见。支持的人认为受检异常可以增加程度的鲁棒性（健壮）。反对的人认为受检异常很少被开发人员正确使用过，并且降低了程序开发的生产率和代码的执行效率。更多详情可参考&lt;a href=&quot;http://www.cnblogs.com/mailingfeng/archive/2012/11/14/2769974.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java异常使用的讨论&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;优秀开源项目实现案例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring DataAccessException&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;什么时候使用异常？使用自定义方法的返回值，还是使用异常来表示各种事件流？&lt;/p&gt;
&lt;p&gt;  我们可以适当使用异常来表示各种事件流，Spring，Hibernate3 都已经采用异常来表示事件流，特别是 Spring 的 DataAccessException 异常层次设计。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用受检异常还是非受检异常？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Use checked exceptions for recoverable conditions and run-time exceptions for programming errors&lt;/p&gt;
&lt;p&gt;一些异常本质上是次要的返回代码（它通常指示违反业务规则），而一些异常则是“发生某种可怕错误”（例如数据库连接失败）的变种。Johnson 提倡对于第一种类别的异常（可选的返回代码）使用检查型异常，而对于后者使用运行时异常。在“发生某种可怕错误”的类别中，其动机是简单地认识到没有调用 者能够有效地处理该异常，因此它也可能以各种方式沿着栈向上扩散而对于中间代码的影响保持最小（并且最小化异常淹没的可能性）。—— Rod Johnson&lt;/p&gt;
&lt;p&gt;我已经发现非检查型异常的最大风险之一就是它并没有按照检查型异常采用的方式那样自我文档化。除非 API 的创建者明确地文档化将要抛出的异常，否则调用者没有办法知道在他们的代码中将要捕获的异常是什么。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/chenssy/p/3438130.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;java提高篇之异常（上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/chenssy/p/3453039.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;java提高篇(十七)—–异常(二)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zhangerqing/article/details/8248186&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java之美[从菜鸟到高手演变]之Exception&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.artima.com/intv/solid.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Failure and Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;The C# Design Process&quot;&gt;The C# Design Process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是异常&quot;&gt;&lt;a href=&quot;#什么是异常&quot; class=&quot;headerlink&quot; title=&quot;什么是异常&quot;&gt;&lt;/a&gt;什么是异常&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;异常情形是指阻止当前方法或者作用域继续执行的问题。——《Think in Java》&lt;/p
    
    </summary>
    
      <category term="Java" scheme="http://zhbhun.github.io/blog/categories/Java/"/>
    
    
      <category term="Java" scheme="http://zhbhun.github.io/blog/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Atom</title>
    <link href="http://zhbhun.github.io/blog/editor/Atom/"/>
    <id>http://zhbhun.github.io/blog/editor/Atom/</id>
    <published>2016-06-29T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;Atom 是由GitHub开发的自由及开放源代码的文字与代码编辑器，支持 OS X、Windows 和 Linux 操作系统，支持 Node.js 所写的插件，并内置 Git 版本控制系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方网站：&lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://atom.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官方文档：&lt;a href=&quot;https://atom.io/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://atom.io/docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官方博客：&lt;a href=&quot;http://blog.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.atom.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官方主题：&lt;a href=&quot;https://atom.io/themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://atom.io/themes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官方插件：&lt;a href=&quot;https://atom.io/packages&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://atom.io/packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官方论坛：&lt;a href=&quot;http://discuss.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://discuss.atom.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;中文社区：&lt;a href=&quot;https://atom-china.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://atom-china.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Most Download Pacakge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/list?direction=desc&amp;amp;sort=stars&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Most Starts Package&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://atom.io/packages/highlight-selected&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;highlight-selected&lt;/a&gt; 双击选中的单词，可高亮当前打开文件中的这个单词&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;语言语法&quot;&gt;&lt;a href=&quot;#语言语法&quot; class=&quot;headerlink&quot; title=&quot;语言语法&quot;&gt;&lt;/a&gt;语言语法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-babel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;language-babel&lt;/a&gt; 支持 JavaScript ES201x, React JSX &amp;amp; Flow 语法高亮&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react&lt;/a&gt; 支持 React 语法，缩进，代码片段，自动完成，格式化&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/linter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linter&lt;/a&gt; 代码语法检查的基本插件，安装后可以去安装具体语言的语法检查插件，为你的代码提供实时的语法检查和风格检查，支持的语言列表见 &lt;a href=&quot;http://atomlinter.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AtomLinter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/linter-eslint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linter-eslint&lt;/a&gt; 基于 ESlint 实现的 javascript 语法检查&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/linter-jshint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linter-jshint&lt;/a&gt;  基于 jshint 实现的 javascript 语法检查&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/linter-htmlhint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linter-htmlhint&lt;/a&gt; 基于 HintHTML 实现的 HTML 语法检查&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码编写&quot;&gt;&lt;a href=&quot;#代码编写&quot; class=&quot;headerlink&quot; title=&quot;代码编写&quot;&gt;&lt;/a&gt;代码编写&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/autocomplete-paths&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;autocomplete-paths&lt;/a&gt; 自动补全路径输入&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-ternjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom-ternjs&lt;/a&gt; 非常专业的 JavaScript 静态分析器，基于对代码的静态分析，可以在编码的时候给出对象的属性、函数的参数的提示。还可以基于静态分析查找标识符的定义、搜索标识符的引用、重命名标识符。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/autocomplete-modules&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;autocomplete-modules&lt;/a&gt; 自动完成 Javascript require/import 语句&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/emmet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;emmet&lt;/a&gt; Web 开发必不可少的插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/docblockr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;docblockr&lt;/a&gt; 编写注释&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-bootstrap3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom-bootstrap3&lt;/a&gt; Bootstrap 3 代码片段和自动完成&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript-snippets&quot;&gt;javascript-snippets&lt;/a&gt; Javascript 和 NodeJS 的代码片段&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码美化&quot;&gt;&lt;a href=&quot;#代码美化&quot; class=&quot;headerlink&quot; title=&quot;代码美化&quot;&gt;&lt;/a&gt;代码美化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-beautify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom-beautify&lt;/a&gt; 代码格式化插件，支持： HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, SQL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/pretty-json&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pretty-json&lt;/a&gt; JSON 格式化工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;写作辅助&quot;&gt;&lt;a href=&quot;#写作辅助&quot; class=&quot;headerlink&quot; title=&quot;写作辅助&quot;&gt;&lt;/a&gt;写作辅助&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/markdown-writer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-writer&lt;/a&gt; Markdown 编写&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/markdown-preview-plus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-preview-plus&lt;/a&gt; 更好的 Markdown 预览&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/melke/markdown-folder&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-folder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/markdown-pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/markdown-toc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-toc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/markdown-preview-plus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown-preview-plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;辅助工具&quot;&gt;&lt;a href=&quot;#辅助工具&quot; class=&quot;headerlink&quot; title=&quot;辅助工具&quot;&gt;&lt;/a&gt;辅助工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/color-picker&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;color-picker&lt;/a&gt; 颜色拾取器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/minimap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minimap&lt;/a&gt; 当前文件的全部代码预览器，可代替滚动条&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/pigments&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pigments&lt;/a&gt; 在项目和文件中显示颜色&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/vim-mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vim-mode&lt;/a&gt; vim 模式控制&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/script&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;script&lt;/a&gt; 运行脚本&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/editorconfig&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;editorconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-html-preview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom-html-preview&lt;/a&gt; HTML 预览&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/highlight-line&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;highlight-line&lt;/a&gt; 高亮当前行&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/activate-power-mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;activate-power-mode&lt;/a&gt; 非常炫的编辑效果插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/build&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;build&lt;/a&gt; 项目构建&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-terminal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom-terminal&lt;/a&gt; 在当前文件所在路径打开控制台&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/minimap-find-and-replace&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minimap-find-and-replace&lt;/a&gt; 查找替换匹配字符的小地图&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/minimap-highlight-selected&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minimap-highlight-selected&lt;/a&gt; 选中字符的小地图&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/atom-runner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom-runner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/open-recent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;open-recent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/node-debugger&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-debugger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/symbols-tree-view&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;symbols-tree-view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/editor-stats&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;editor-stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/file-icons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;file-icons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;版本管理&quot;&gt;&lt;a href=&quot;#版本管理&quot; class=&quot;headerlink&quot; title=&quot;版本管理&quot;&gt;&lt;/a&gt;版本管理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/git-control&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git-control&lt;/a&gt; 提供 git 管理界面&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/merge-conflicts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;merge-conflicts&lt;/a&gt; 解决 git 冲突&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/minimap-git-diff&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minimap-git-diff package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/git-history&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git-history&lt;/a&gt; 查看文件的版本历史&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/advanced-open-file&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;advanced-open-file&lt;/a&gt; 简单快速的打开或创建文件和文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;项目管理&quot;&gt;&lt;a href=&quot;#项目管理&quot; class=&quot;headerlink&quot; title=&quot;项目管理&quot;&gt;&lt;/a&gt;项目管理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/todo-show&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;todo-show&lt;/a&gt; 查找项目中所有包含 TODO, FIXME, CHANGED, XXX, IDEA, HACK, NOTE, REVIEW 的注释&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/project-manager&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;project-manager&lt;/a&gt;  项目管理插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/dash&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom-china.org/t/atom/804&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom 插件推荐：代码编辑（语言无关类）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom-china.org/t/atom/324&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom 插件推荐：版本控制专题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;其他-1&quot;&gt;&lt;a href=&quot;#其他-1&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/topic/19952200&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎-Atom（文本编辑器）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom-china.org/t/faq/326&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方博客/手册索引、插件推荐专题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;附录&quot;&gt;&lt;a href=&quot;#附录&quot; class=&quot;headerlink&quot; title=&quot;附录&quot;&gt;&lt;/a&gt;附录&lt;/h1&gt;&lt;h2 id=&quot;教程&quot;&gt;&lt;a href=&quot;#教程&quot; class=&quot;headerlink&quot; title=&quot;教程&quot;&gt;&lt;/a&gt;教程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jeffjade.com/2016/03/03/2016-03-02-how-to-use-atom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;新编码神器Atom使用纪要&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;插件-1&quot;&gt;&lt;a href=&quot;#插件-1&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;h3 id=&quot;Linter&quot;&gt;&lt;a href=&quot;#Linter&quot; class=&quot;headerlink&quot; title=&quot;Linter&quot;&gt;&lt;/a&gt;Linter&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://atomlinter.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://atomlinter.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Linter-eslint&quot;&gt;&lt;a href=&quot;#Linter-eslint&quot; class=&quot;headerlink&quot; title=&quot;Linter-eslint&quot;&gt;&lt;/a&gt;Linter-eslint&lt;/h4&gt;&lt;p&gt;Linter-esint 使用 eslint 实现 Javascript 语法检查，它会检查项目本地是否安装了 eslint（NPM 安装），如果没有安装的话，会使用它自身携带的 eslint（要求 eslint 版本高于 v1.0.0）。此外使用 Linter-eslint 需要安装插件 linter，如果没有安装的话，会自动安装。如果已经安装了一个可选的 linter 插件，可以禁用自动安装的 linter。&lt;br&gt;ESLint 默认没有使用任何规则来检查代码语法，这需要自己手动配置项目的语法检查规则。可以在项目根路径下运行 &lt;code&gt;eslint --init&lt;/code&gt; 来快速生成配置文件，然后再根据自己需要手动调整。关于 eslint 的用法可参考博客 &lt;a href=&quot;http://devnull.guru/get-started-with-eslint/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Get Started With ESLint&lt;/a&gt; 和 &lt;a href=&quot;http://eslint.org/docs/user-guide/configuring&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ESLint document&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;设置&quot;&gt;&lt;a href=&quot;#设置&quot; class=&quot;headerlink&quot; title=&quot;设置&quot;&gt;&lt;/a&gt;设置&lt;/h1&gt;&lt;h2 id=&quot;自动完成优化&quot;&gt;&lt;a href=&quot;#自动完成优化&quot; class=&quot;headerlink&quot; title=&quot;自动完成优化&quot;&gt;&lt;/a&gt;自动完成优化&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;自动完成提示匹配不准确&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;autocomplete-plus 的提示排序存在问题，没有完全按照字符排序，参考如下 ISSUES：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/autocomplete-plus/issues/508&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Suggestion order&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/autocomplete-plus/issues/767&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Autocompletion result ranking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/autocomplete-plus/issues/465&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Snippet completion before object completion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/language-ruby/issues/130&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;do&lt;/code&gt; snippet should have higher priority than &lt;code&gt;dop&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/autocomplete-plus/issues/653&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Provider initial ordering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jeancroy/fuzzaldrin-plus/issues/9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Match for full word provides different result&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方案：禁用 autocomplete-plus 的 Alternate Scoring。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其他问题&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/autocomplete-plus/issues/24&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Remove enter as default confirmation key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;符号视图缩进&quot;&gt;&lt;a href=&quot;#符号视图缩进&quot; class=&quot;headerlink&quot; title=&quot;符号视图缩进&quot;&gt;&lt;/a&gt;符号视图缩进&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/symbols-view/issues/156&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Indent for markdown Table of Content preview when press “cmd + r”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;常见问题&quot;&gt;&lt;a href=&quot;#常见问题&quot; class=&quot;headerlink&quot; title=&quot;常见问题&quot;&gt;&lt;/a&gt;常见问题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/atom/atom/blob/master/docs/build-instructions/linux.md#typeerror-unable-to-watch-path&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TypeError: Unable to watch path&lt;/a&gt; —— &lt;a href=&quot;https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;React-开发环境&quot;&gt;&lt;a href=&quot;#React-开发环境&quot; class=&quot;headerlink&quot; title=&quot;React 开发环境&quot;&gt;&lt;/a&gt;React 开发环境&lt;/h1&gt;&lt;p&gt;language-babel vs atom-react&lt;br&gt;| 特性 | language-babel | atom-react |&lt;br&gt;| — | — | — |&lt;br&gt;| Syntax Highlighting | + | + |&lt;br&gt;| Auto Indentation | + | + |&lt;br&gt;| Code Folding | - | + |&lt;br&gt;| Snippets | - | + |&lt;br&gt;| Format | - | + |&lt;br&gt;| HTML to JSX | - | + |&lt;br&gt;| Autocomplete | + | + |&lt;br&gt;| Automatic closing tag | + | + |&lt;br&gt;| commenting | + | - |&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/language-babel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;language-babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://orktes.github.io/atom-react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;atom-react&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sitepoint.com/10-essential-atom-add-ons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;10 Essential Atom Add-ons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://benmccormick.org/2016/01/11/the-most-interesting-atom-packages-ive-found-so-far/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Most Interesting Atom Packages I’ve found (so far)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://elijahmanor.com/github-atom-packages/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Recommended GitHub Atom Packages for Web Developers
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://scotch.io/bar-talk/best-of-atom-features-plugins-acting-like-sublime-text&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Best of Atom: Features, Plugins, Acting Like Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://codegeekz.com/15-useful-atom-packages-for-developers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;15 Useful Atom Packages for Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/What-are-the-best-packages-for-Atom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What are the best packages for Atom?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://atom.io/packages/list?direction=desc&amp;amp;sort=downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://atom.io/packages/list?direction=desc&amp;amp;sort=downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Atom 是由GitHub开发的自由及开放源代码的文字与代码编辑器，支持 OS X、Windows 和 Linux 操作系统，支持 Node.js 所写的插件，并内置 Git 版本控制系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方网站：&lt;a href=&quot;https://atom.i
    
    </summary>
    
      <category term="Editor" scheme="http://zhbhun.github.io/blog/categories/Editor/"/>
    
    
      <category term="Editor" scheme="http://zhbhun.github.io/blog/tags/Editor/"/>
    
  </entry>
  
  <entry>
    <title>React 基于“全局变量”的组件通信</title>
    <link href="http://zhbhun.github.io/blog/react/React-Context/"/>
    <id>http://zhbhun.github.io/blog/react/React-Context/</id>
    <published>2016-05-24T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;React 开发中，一般将状态放在外层组件，然后将状态通过属性一层层的传到相应的里层组件中，再渲染显示出来。例如下面这段代码，外层组件 App 有个状态 color，其以属性的形式经过 MessageList，Message 传给 Button。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var Button = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;button style=&amp;#123;&amp;#123;background: this.props.color&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;this.props.children&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var Message = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;this.props.text&amp;#125; &amp;lt;Button color=&amp;#123;this.props.color&amp;#125;&amp;gt;Delete&amp;lt;/Button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var MessageList = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color = &amp;quot;purple&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var children = this.props.messages.map(function(message) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return &amp;lt;Message text=&amp;#123;message.text&amp;#125; color=&amp;#123;this.props.color&amp;#125; /&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;lt;div&amp;gt;&amp;#123;children&amp;#125;&amp;lt;/div&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var App = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getInitialState: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      messages: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      color: &amp;apos;purple&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;MessageList&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        messages=&amp;#123;this.state.messages&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color=&amp;#123;this.state.color&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是，有时候我们不想一层层的传递属性，Context 就是帮助我们实现这个的 React 特性。&lt;/p&gt;
&lt;h1 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; title=&quot;基本使用&quot;&gt;&lt;/a&gt;基本使用&lt;/h1&gt;&lt;p&gt;要将外层组件的状态直接传递给里层组件，要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外层组件定义属性 childContextTypes，作为需要传递的属性类型声明&lt;/li&gt;
&lt;li&gt;外层组件实例定义 getChildContext 方法，用于获取需要传递的属性值&lt;/li&gt;
&lt;li&gt;里层组件定义属性 contextTypes，可以只声明需要用到属性的类型声明（没有声明的不会传递）&lt;/li&gt;
&lt;li&gt;里层组件通过 this.context 获取 getChildContext 返回的值，如果没有 contextTypes，则为 undefined&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var Button = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; contextTypes: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   color: React.PropTypes.string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;lt;button style=&amp;#123;&amp;#123;background: this.context.color&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;this.props.children&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var Message = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;this.props.text&amp;#125; &amp;lt;Button&amp;gt;Delete&amp;lt;/Button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var MessageList = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   var children = this.props.messages.map(function(message) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     return &amp;lt;Message text=&amp;#123;message.text&amp;#125; /&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return &amp;lt;div&amp;gt;&amp;#123;children&amp;#125;&amp;lt;/div&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var App = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  childContextTypes: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    color: React.PropTypes.string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getInitialState: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      messages: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      color: &amp;apos;purple&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getChildContext: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;color: &amp;quot;purple&amp;quot;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;MessageList messages=&amp;#123;this.state.messages&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;在无状态组件中使用-Context&quot;&gt;&lt;a href=&quot;#在无状态组件中使用-Context&quot; class=&quot;headerlink&quot; title=&quot;在无状态组件中使用 Context&quot;&gt;&lt;/a&gt;在无状态组件中使用 Context&lt;/h1&gt;&lt;p&gt;如果无状态组件有定义属性 contextTypes，那么该组件也可以引用 context。下面代码重构前面的 Button 组件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function Button(props, context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;button style=&amp;#123;&amp;#123;background: context.color&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;props.children&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button.contextTypes = &amp;#123;color: React.PropTypes.string&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Context-更新与生命周期&quot;&gt;&lt;a href=&quot;#Context-更新与生命周期&quot; class=&quot;headerlink&quot; title=&quot;Context 更新与生命周期&quot;&gt;&lt;/a&gt;Context 更新与生命周期&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;外层组件实例会在 render 后调用 getChildContext，获取到的值会传递给声明了 contextTypes 的里层组件&lt;/li&gt;
&lt;li&gt;声明了 contextTypes 的里层组件会在生命周期函数获取额外的的参数 context&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var Button = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contextTypes: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    color: React.PropTypes.string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillMount: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;Button&amp;apos;, &amp;apos;componentWillMount&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidMount: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;Button&amp;apos;, &amp;apos;componentDidMount&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillReceiveProps: function(nextProps, nextContext) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;Button&amp;apos;, &amp;apos;componentWillReceiveProps&amp;apos;, nextContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  shouldComponentUpdate: function(nextProps, nextState, nextContext) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;Button&amp;apos;, &amp;apos;shouldComponentUpdate&amp;apos;, nextContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillUpdate: function(nextProps, nextState, nextContext) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;Button&amp;apos;, &amp;apos;componentWillUpdate&amp;apos;, nextContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidUpdate: function(prevProps, prevState, prevContext) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;Button&amp;apos;, &amp;apos;componentDidUpdate&amp;apos;, prevContext);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;Button&amp;apos;, &amp;apos;render&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;button style=&amp;#123;&amp;#123;background: this.context.color&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;this.props.children&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var Message = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;this.props.text&amp;#125; &amp;lt;Button&amp;gt;Delete&amp;lt;/Button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var MessageList = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillMount: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;MessageList&amp;apos;, &amp;apos;componentWillMount&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidMount: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;MessageList&amp;apos;, &amp;apos;componentDidMount&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillReceiveProps: function(nextProps) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;MessageList&amp;apos;, &amp;apos;componentWillReceiveProps&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  shouldComponentUpdate: function(nextProps, nextState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;MessageList&amp;apos;, &amp;apos;shouldComponentUpdate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillUpdate: function(nextProps, nextState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;MessageList&amp;apos;, &amp;apos;componentWillUpdate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidUpdate: function(prevProps, prevState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;MessageList&amp;apos;, &amp;apos;componentDidUpdate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;MessageList&amp;apos;, &amp;apos;render&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var children = this.props.messages.map(function(message, index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return &amp;lt;Message key=&amp;#123;index&amp;#125; text=&amp;#123;message.text&amp;#125; /&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;lt;div&amp;gt;&amp;#123;children&amp;#125;&amp;lt;/div&amp;gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var App = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  childContextTypes: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    color: React.PropTypes.string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getInitialState: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;getInitiateState&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      messages: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123; text: &amp;apos;a&amp;apos; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      color: &amp;apos;purple&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  getChildContext: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;getChildContext&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;color: this.state.color&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillMount: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;componentWillMount&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidMount: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;componentDidMount&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;blue&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, 3000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillReceiveProps: function(nextProps) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;componentWillReceiveProps&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  shouldComponentUpdate: function(nextProps, nextState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;shouldComponentUpdate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentWillUpdate: function(nextProps, nextState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;componentWillUpdate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  componentDidUpdate: function(prevProps, prevState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;componentDidUpdate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;App&amp;apos;, &amp;apos;render&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;MessageList messages=&amp;#123;this.state.messages&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* 打印日志&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App getInitiateState&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App componentWillMount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App getChildContext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList componentWillMount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;utton componentWillMount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button componentDidMount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList componentDidMount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App componentDidMount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App shouldComponentUpdate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App componentWillUpdate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App getChildContext&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList componentWillReceiveProps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList shouldComponentUpdate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList componentWillUpdate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button componentWillReceiveProps Object &amp;#123;color: &amp;quot;blue&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button shouldComponentUpdate Object &amp;#123;color: &amp;quot;blue&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button componentWillUpdate Object &amp;#123;color: &amp;quot;blue&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Button componentDidUpdate Object &amp;#123;color: &amp;quot;purple&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MessageList componentDidUpdate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;App componentDidUpdate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一般 Context 值取自外层组件状态，以便 getChildContext 获取最新的状态传递给自组件。&lt;/p&gt;
&lt;p&gt;Context 并不是万能的，如果中间组件的 shouldComponentUpdate 返回 false，那么里层组件将无法更新。&lt;/p&gt;
&lt;h1 id=&quot;实际运用&quot;&gt;&lt;a href=&quot;#实际运用&quot; class=&quot;headerlink&quot; title=&quot;实际运用&quot;&gt;&lt;/a&gt;实际运用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;主题切换&lt;/li&gt;
&lt;li&gt;响应式设计&lt;/li&gt;
&lt;li&gt;登陆会话&lt;/li&gt;
&lt;li&gt;语言设置&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://facebook.github.io/react/docs/context.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://facebook.github.io/react/docs/context.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004636213&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/a/1190000004636213&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/issues/2517&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/facebook/react/issues/2517&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;React 开发中，一般将状态放在外层组件，然后将状态通过属性一层层的传到相应的里层组件中，再渲染显示出来。例如下面这段代码，外层组件 App 有个状态 color，其以属性的形式经过 MessageList，Message 传给 Button。&lt;/p&gt;
&lt;figure c
    
    </summary>
    
      <category term="React" scheme="http://zhbhun.github.io/blog/categories/React/"/>
    
    
      <category term="React" scheme="http://zhbhun.github.io/blog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Node.js</title>
    <link href="http://zhbhun.github.io/blog/nodejs/Node.js/"/>
    <id>http://zhbhun.github.io/blog/nodejs/Node.js/</id>
    <published>2016-05-14T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;Node.js 是一个 Javascript 运行环境。实际上它是对 Google V8 引擎进行了封装。V8 引 擎执行 Javascript 的速度非常快，性能非常好。Node.js 对一些特殊用例进行了优化，提供了替代的 API，使得 V8 在非浏览器环境下运行得更好。&lt;/p&gt;
&lt;h1 id=&quot;安装配置&quot;&gt;&lt;a href=&quot;#安装配置&quot; class=&quot;headerlink&quot; title=&quot;安装配置&quot;&gt;&lt;/a&gt;安装配置&lt;/h1&gt;&lt;p&gt;安装 nvm&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 nvm：&lt;code&gt;curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash&lt;/code&gt; —— 克隆 nvm 仓库到 ~/.nvm 目录，并添加配置到 ~/.bash_profile, ~/.zshrc, ~/.profile, 或 ~/.bashrc 中&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export NVM_DIR=&amp;quot;$HOME/.nvm&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -s &amp;quot;$NVM_DIR/nvm.sh&amp;quot; ] &amp;amp;&amp;amp; . &amp;quot;$NVM_DIR/nvm.sh&amp;quot; # This loads nvm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证 nvm：&lt;code&gt;nvm --version&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;升级 nvm&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cd “$NVM_DIR”&lt;/li&gt;
&lt;li&gt;git fetch origin&lt;/li&gt;
&lt;li&gt;git checkout &lt;code&gt;git describe --abbrev=0 --tags --match &amp;quot;v[0-9]*&amp;quot; origin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;$NVM_DIR/nvm.sh&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安装 node&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装默认版本：&lt;code&gt;nvm install node&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装最新稳定版本：&lt;code&gt;nvm install stable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装指定版本：&lt;code&gt;nvm install &amp;lt;version&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;切换 node&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;临时切换：&lt;code&gt;nvm use &amp;lt;version&amp;gt;&lt;/code&gt; —— 只在当前 shell 起作用&lt;/li&gt;
&lt;li&gt;修改默认 &lt;code&gt;node：nvm alias default &amp;lt;version&amp;gt;&lt;/code&gt; —— 在所有 shell 中起作用&lt;/li&gt;
&lt;li&gt;&lt;p&gt;项目配置：项目所需的 node 版本和默认的不同，可配置 .nvmrc 来解决&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd &amp;lt;项目根目录&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo 4 &amp;gt; .nvmrc&lt;/code&gt; —— 将 .nvmrc 文件提交到版本控制仓库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nvm use&lt;/code&gt; —— 自动读取 .nvmrc 中配置的版本号，所以不需要再指定版本号，但每次开启新的 shell 时都需要执行该命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;node -v&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考文献&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/creationix/nvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/creationix/nvm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/kaiye/p/4937191.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 nvm 管理不同版本的 node 与 npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新历史&quot;&gt;&lt;a href=&quot;#更新历史&quot; class=&quot;headerlink&quot; title=&quot;更新历史&quot;&gt;&lt;/a&gt;更新历史&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tuicool.com/articles/hit/aAVbYnI&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js 6.0支持93%的ES2015语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;学习资源&quot;&gt;&lt;a href=&quot;#学习资源&quot; class=&quot;headerlink&quot; title=&quot;学习资源&quot;&gt;&lt;/a&gt;学习资源&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://morning.work/page/2016-05/how-to-write-a-nodejs-api-client-package.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何用 Node.js 编写一个 API 客户端&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Node.js 是一个 Javascript 运行环境。实际上它是对 Google V8 引擎进行了封装。V8 引 擎执行 Javascript 的速度非常快，性能非常好。Node.js 对一些特殊用例进行了优化，提供了替代的 API，使得 V8 在非浏览器环境下运行得更好
    
    </summary>
    
      <category term="Node.js" scheme="http://zhbhun.github.io/blog/categories/Node-js/"/>
    
    
      <category term="Node.js" scheme="http://zhbhun.github.io/blog/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>React 兼容性</title>
    <link href="http://zhbhun.github.io/blog/react/React-Compatibility/"/>
    <id>http://zhbhun.github.io/blog/react/React-Compatibility/</id>
    <published>2016-05-12T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;React 兼容 IE8+ 浏览器的开发环境配置。&lt;/p&gt;
&lt;h1 id=&quot;需要的-Ployfill&quot;&gt;&lt;a href=&quot;#需要的-Ployfill&quot; class=&quot;headerlink&quot; title=&quot;需要的 Ployfill&quot;&gt;&lt;/a&gt;需要的 Ployfill&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/paulmillr/console-polyfill&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;console-polyfill&lt;/a&gt;：IE9 及以下版本只有在开发者工具打开的时候才支持 console，否则 console 是 undefined，调用的话会抛出错误。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jakearchibald/es6-promise&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es6-promise&lt;/a&gt;：所有版本的 IE 都不支持 Promise。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/fetch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fetch&lt;/a&gt;：所有版本的 IE 都不支持 fetch，需要注意的是该 polyfill 只支持 IE10 及以上版本的浏览器，IE10 以下版本的浏览器需要特殊处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;IE8-需要特殊处理&quot;&gt;&lt;a href=&quot;#IE8-需要特殊处理&quot; class=&quot;headerlink&quot; title=&quot;IE8 需要特殊处理&quot;&gt;&lt;/a&gt;IE8 需要特殊处理&lt;/h1&gt;&lt;p&gt;开发要点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不使用 React v15 或更高版本 —— 从 React v15 开始，React DOM 将不会再支持 IE8 了。&lt;/li&gt;
&lt;li&gt;建议使用 CommonJS 风格来引入需要的模块 —— babel 把 import 编译成了 Object.defineProperty，而 IE8 中没有这个方法。&lt;/li&gt;
&lt;li&gt;JSON 要在 IE8 标准模式下才能使用 —— 即添加 &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=EDGE&amp;quot;/&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要的 Polyfill&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/es-shims/es5-shim&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es5-shim&lt;/a&gt;：IE8 不支持 ES5。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/es-shims/es5-shim#shams&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es5-sham&lt;/a&gt;：同上。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sorrycc/es3ify-loader&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;es3ify-loader&lt;/a&gt;：代码中或者第三方模块中使用了保留字，比如 default，会抛出错误 &lt;code&gt;Expected identifier&lt;/code&gt;，使用 es3ify-loader 可以将 ES5 代码转换为 ES3。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/camsong/fetch-ie8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fetch-ie8&lt;/a&gt;：针对 IE8 的 fetch polyfill。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;程序示例&quot;&gt;&lt;a href=&quot;#程序示例&quot; class=&quot;headerlink&quot; title=&quot;程序示例&quot;&gt;&lt;/a&gt;程序示例&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/zhbhun/program-demo/tree/master/react/react-ie&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/zhbhun/program-demo/tree/master/react/react-ie&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码结构&quot;&gt;&lt;a href=&quot;#代码结构&quot; class=&quot;headerlink&quot; title=&quot;代码结构&quot;&gt;&lt;/a&gt;代码结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;verdor/：polyfill&lt;/li&gt;
&lt;li&gt;debug.html：开发环境 HTML 入口文件，访问 &lt;code&gt;http://ip:port/debug.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;index.html：生产环境 HTML 入口文件&lt;/li&gt;
&lt;li&gt;webpack.config.dev.js：针对 IE9 及以上版本的开发环境配置&lt;/li&gt;
&lt;li&gt;webpack.config.dev.ie8.js：针对 IE8 的开发环境配置&lt;/li&gt;
&lt;li&gt;webpack.config.prod.js：针对 IE9 及以上版本的生产环境配置&lt;/li&gt;
&lt;li&gt;webpack.config.prod.ie8.js：针对 IE8 的生产环境配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;脚本命令&quot;&gt;&lt;a href=&quot;#脚本命令&quot; class=&quot;headerlink&quot; title=&quot;脚本命令&quot;&gt;&lt;/a&gt;脚本命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm start&lt;/code&gt;：IE9 及以上版本的开发服务器启动命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run startByIP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run product:clean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run product:webpack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run product&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm startIE8&lt;/code&gt;：IE8 的开发服务器启动命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run startIE8ByIP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run productIE8:clean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run productIE8:webpack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm run productIE8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/working-with-the-browser.html#browser-support&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Browser Support&lt;/a&gt;- &lt;a href=&quot;https://github.com/ant-tool/atool-build/issues/28&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ant-tool/atool-build/issues/28&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xcatliu/react-ie8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/xcatliu/react-ie8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ant-design/ant-design/issues/858&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ant-design/ant-design/issues/858&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SCRIPT1028: 缺少标识符、字符串或数字&lt;/code&gt;：代码中或者第三方模块中使用了保留字，比如 default&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;React 兼容 IE8+ 浏览器的开发环境配置。&lt;/p&gt;
&lt;h1 id=&quot;需要的-Ployfill&quot;&gt;&lt;a href=&quot;#需要的-Ployfill&quot; class=&quot;headerlink&quot; title=&quot;需要的 Ployfill&quot;&gt;&lt;/a&gt;需要的 Ployfill&lt;/h1&gt;
    
    </summary>
    
      <category term="React" scheme="http://zhbhun.github.io/blog/categories/React/"/>
    
    
      <category term="React" scheme="http://zhbhun.github.io/blog/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Git 常用命令</title>
    <link href="http://zhbhun.github.io/blog/vcs/Git-Command/"/>
    <id>http://zhbhun.github.io/blog/vcs/Git-Command/</id>
    <published>2016-04-22T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;h1 id=&quot;创建版本库&quot;&gt;&lt;a href=&quot;#创建版本库&quot; class=&quot;headerlink&quot; title=&quot;创建版本库&quot;&gt;&lt;/a&gt;创建版本库&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add readme.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;wrote a readme file&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;管理版本库&quot;&gt;&lt;a href=&quot;#管理版本库&quot; class=&quot;headerlink&quot; title=&quot;管理版本库&quot;&gt;&lt;/a&gt;管理版本库&lt;/h1&gt;&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;工作区: 项目目录&lt;/li&gt;
&lt;li&gt;版本库: &lt;code&gt;.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;暂存区: &lt;code&gt;git add&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;管理修改: &lt;code&gt;git commit&lt;/code&gt; 只提交暂存区的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;查看状态: &lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看差异: &lt;code&gt;git diff readme.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加暂存区: &lt;code&gt;git add readme.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;条件分支: &lt;code&gt;git commit readme.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;版本历史: &lt;code&gt;git log [--pretty=oneline]&lt;/code&gt;, &lt;code&gt;git reflog&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;版本回退: &lt;code&gt;git reset --hard HEAD^&lt;/code&gt;, &lt;code&gt;git reset --hard 提交ID&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;HEAD 当前版本&lt;/li&gt;
&lt;li&gt;HEAD^ 上一个版本&lt;/li&gt;
&lt;li&gt;HEAD^^ 上上一个版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;取消修改: &lt;code&gt;git checkout -- readme.txt&lt;/code&gt;, &lt;code&gt;git reset HEAD readme.txt&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;还没添加到暂存区: 回到和版本库一致&lt;/li&gt;
&lt;li&gt;已添加到暂存区: 回到添加到暂存区的状态&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;删除文件: &lt;code&gt;git rm readme.txt&lt;/code&gt; + &lt;code&gt;git commit -m &amp;quot;delete readme.txt&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;恢复删除: &lt;code&gt;git checkout -- readme.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;远程仓库&quot;&gt;&lt;a href=&quot;#远程仓库&quot; class=&quot;headerlink&quot; title=&quot;远程仓库&quot;&gt;&lt;/a&gt;远程仓库&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;SSH 配置&lt;ul&gt;
&lt;li&gt;创建 SSH Key: &lt;code&gt;ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot;&lt;/code&gt; — 生成 id_rsa 和 id_rsa.pub&lt;/li&gt;
&lt;li&gt;配置 Github: 添加 SSH Key&lt;/li&gt;
&lt;li&gt;检查是否成功: …&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加远程库&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git remote add origin git@github.com:account/repository.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u origin master&lt;/code&gt;, &lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;克隆远程库: &lt;code&gt;git clone git@github.com:account/repository.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看远程仓库: &lt;code&gt;git remote&lt;/code&gt;, &lt;code&gt;git remote -v&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;分支管理&quot;&gt;&lt;a href=&quot;#分支管理&quot; class=&quot;headerlink&quot; title=&quot;分支管理&quot;&gt;&lt;/a&gt;分支管理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;创建分支: &lt;code&gt;git checkout -b dev&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git branch dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看分支: &lt;code&gt;git branch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换分支: &lt;code&gt;git checkout master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;合并分支:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git merge dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge --no-ff -m &amp;quot;merge with no-ff&amp;quot; dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;删除分支&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git branch -d dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -D dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解决冲突: …&lt;/li&gt;
&lt;li&gt;分支管理策略: master, dev, issue-xxx, feture-xxx…&lt;/li&gt;
&lt;li&gt;Bug 分支&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git stash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add readme.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;fix bug 101&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge --no-ff -m &amp;quot;merged bug fix 101&amp;quot; issue-101&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -d issue-101&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git stash apply&lt;/code&gt;, &lt;code&gt;git stash drop&lt;/code&gt; — &lt;code&gt;git stash pop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Feture 分支&lt;/li&gt;
&lt;li&gt;多人协作&lt;ul&gt;
&lt;li&gt;抓取分支:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone git@github.com:michaelliao/learngit.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch&lt;/code&gt; — 只有 master 分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout -b dev origin/dev&lt;/code&gt; — 抓取 dev 分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch --set-upstream dev origin/dev&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull&lt;/code&gt; — 如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;推送分支: &lt;code&gt;git push origin master&lt;/code&gt;, &lt;code&gt;git push origin dev&lt;/code&gt; — 选择必要的分支进行推送&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;标签管理&quot;&gt;&lt;a href=&quot;#标签管理&quot; class=&quot;headerlink&quot; title=&quot;标签管理&quot;&gt;&lt;/a&gt;标签管理&lt;/h1&gt;&lt;p&gt;TODO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;创建版本库&quot;&gt;&lt;a href=&quot;#创建版本库&quot; class=&quot;headerlink&quot; title=&quot;创建版本库&quot;&gt;&lt;/a&gt;创建版本库&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add readme.
    
    </summary>
    
      <category term="VCS" scheme="http://zhbhun.github.io/blog/categories/VCS/"/>
    
    
      <category term="VCS" scheme="http://zhbhun.github.io/blog/tags/VCS/"/>
    
  </entry>
  
  <entry>
    <title>Sublime</title>
    <link href="http://zhbhun.github.io/blog/editor/Sublime/"/>
    <id>http://zhbhun.github.io/blog/editor/Sublime/</id>
    <published>2015-11-13T16:00:00.000Z</published>
    <updated>2016-11-15T13:12:02.658Z</updated>
    
    <content type="html">&lt;p&gt;Sublime  是一个跨平台的编辑器，同时支持 Windows、Linux、Mac OS X 等操作系统，由程序员 Jon Skinner 于 2008 年 1 月份所开发出来，它最初被设计为一个具有丰富扩展功能的 Vim。&lt;/p&gt;
&lt;h1 id=&quot;Package-Control&quot;&gt;&lt;a href=&quot;#Package-Control&quot; class=&quot;headerlink&quot; title=&quot;Package Control&quot;&gt;&lt;/a&gt;Package Control&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;打开 Sublime Text 控制台：&lt;code&gt;View &amp;gt; Show Console&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复制下面的代码到控制台，然后回车；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sublime Text 3&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import urllib.request,os,hashlib; h = &amp;apos;2915d1851351e5ee549c20394736b442&amp;apos; + &amp;apos;8bc59f460fa1548d1514676163dafc88&amp;apos;; pf = &amp;apos;Package Control.sublime-package&amp;apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &amp;apos;http://packagecontrol.io/&amp;apos; + pf.replace(&amp;apos; &amp;apos;, &amp;apos;%20&amp;apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&amp;apos;Error validating download (got %s instead of %s), please try manual install&amp;apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &amp;apos;wb&amp;apos; ).write(by)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sublime Text 2&lt;/p&gt;
  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import urllib2,os,hashlib; h = &amp;apos;2915d1851351e5ee549c20394736b442&amp;apos; + &amp;apos;8bc59f460fa1548d1514676163dafc88&amp;apos;; pf = &amp;apos;Package Control.sublime-package&amp;apos;; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( &amp;apos;http://packagecontrol.io/&amp;apos; + pf.replace(&amp;apos; &amp;apos;, &amp;apos;%20&amp;apos;)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), &amp;apos;wb&amp;apos; ).write(by) if dh == h else None; print(&amp;apos;Error validating download (got %s instead of %s), please try manual install&amp;apos; % (dh, h) if dh != h else &amp;apos;Please restart Sublime Text to finish installation&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启 Sublime Text，然后打开 Package Control：&lt;code&gt;ctrl + shift + p&lt;/code&gt; &amp;gt; &lt;code&gt;package control&lt;/code&gt;；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;字体&quot;&gt;&lt;a href=&quot;#字体&quot; class=&quot;headerlink&quot; title=&quot;字体&quot;&gt;&lt;/a&gt;字体&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;打开用户设置：&lt;code&gt;Preferences &amp;gt; Setting - User&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加配置项：&lt;code&gt;&amp;quot;font_face&amp;quot;: &amp;quot;YaHei Consolas Hybrid&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;仓库地址: &lt;a href=&quot;https://packagecontrol.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://packagecontrol.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;统计地址: &lt;a href=&quot;https://packagecontrol.io/stats&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://packagecontrol.io/stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;概览地址: &lt;a href=&quot;https://packagecontrol.io/browse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://packagecontrol.io/browse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;文档地址: &lt;a href=&quot;https://packagecontrol.io/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://packagecontrol.io/docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;必备&quot;&gt;&lt;a href=&quot;#必备&quot; class=&quot;headerlink&quot; title=&quot;必备&quot;&gt;&lt;/a&gt;必备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/ConvertToUTF8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ConvertToUTF8&lt;/a&gt;: 编辑和保存文件编码为 GBK, BIG5, EUC-KR, EUC-JP, Shift_JIS 等格式。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/EncodingHelper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EncodingHelper&lt;/a&gt;: 在状态栏显示文件编码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码导航&quot;&gt;&lt;a href=&quot;#代码导航&quot; class=&quot;headerlink&quot; title=&quot;代码导航&quot;&gt;&lt;/a&gt;代码导航&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/CTags&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CTags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;语法高亮&quot;&gt;&lt;a href=&quot;#语法高亮&quot; class=&quot;headerlink&quot; title=&quot;语法高亮&quot;&gt;&lt;/a&gt;语法高亮&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://https//github.com/babel/babel-sublime&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/CSS3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Sass&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/LESS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LESS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SCSS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SCSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;语法检查&quot;&gt;&lt;a href=&quot;#语法检查&quot; class=&quot;headerlink&quot; title=&quot;语法检查&quot;&gt;&lt;/a&gt;语法检查&lt;/h2&gt;&lt;h2 id=&quot;语法分析&quot;&gt;&lt;a href=&quot;#语法分析&quot; class=&quot;headerlink&quot; title=&quot;语法分析&quot;&gt;&lt;/a&gt;语法分析&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-html-tidy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-html-tidy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-contrib-mdl&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-contrib-mdl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-json&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-jshint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-jshint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-jscs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-jscs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-contrib-eslint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-contrib-eslint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-jsxhint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-jsxhint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-csslint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-csslint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-contrib-scss-lint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-contrib-scss-lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-contrib-sqlint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-contrib-sqlint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-javac&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-javac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter-xmllint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeLinter-xmllint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码片段&quot;&gt;&lt;a href=&quot;#代码片段&quot; class=&quot;headerlink&quot; title=&quot;代码片段&quot;&gt;&lt;/a&gt;代码片段&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Emmet&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/AngularJS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Babel%20Snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Babel Snippets&lt;/a&gt;：React Snippet&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Better%20CoffeeScript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Better CoffeeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Bootstrap%203%20Snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bootstrap 3 Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Comment-Snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Comment-Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Console%20API%20Snippets%20%28JavaScript%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Console API Snippets (Java​Script)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spadgos/sublime-jsdocs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DocBlockr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/JavaScript%20Console&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java​Script Console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/JavaScript%20Snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript Snippet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/CSS%20Media%20Query%20Snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Media Query Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/CSS%20Snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/browse/labels/snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/jQuery%20Snippets%20pack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jQuery Snippets pack&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.hongkiat.com/blog/sublime-code-snippets/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.hongkiat.com/blog/sublime-code-snippets/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Nodejs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nodejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/react-native-snippets&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-native-snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/ReactJS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/TypeScript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码格式&quot;&gt;&lt;a href=&quot;#代码格式&quot; class=&quot;headerlink&quot; title=&quot;代码格式&quot;&gt;&lt;/a&gt;代码格式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;EditorConfig&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/HTML-CSS-JS%20Prettify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML/CSS/JS Prettify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rareyman/HTMLBeautify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTMLBeautify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jdc0589/jsFormat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JsFormat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mutian.github.io/Sublime-CSS-Format/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime-CSS-Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/CSS%20Format&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Pretty%20JSON&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pretty JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeAStyleFormatter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeAStyleFormatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/CodeFormatter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodeFormatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Alignment&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SqlBeautifier&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SqlBeautifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Indent%20XML&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Indent XML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Markdown&quot;&gt;&lt;a href=&quot;#Markdown&quot; class=&quot;headerlink&quot; title=&quot;Markdown&quot;&gt;&lt;/a&gt;Markdown&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;MarkdownEditing&lt;/li&gt;
&lt;li&gt;Markdown Preview&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SideBarEnhancements&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SideBarEnhancements&lt;/a&gt;: 增强侧边栏&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SideBarGit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SideBarGit&lt;/a&gt;: 侧边栏增加 git 命令&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Focus%20File%20on%20Sidebar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Focus File on Sidebar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Modific&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Modific&lt;/a&gt;: 高亮自从上一次提交后的修改行&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/ExpandRegion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ExpandRegion&lt;/a&gt;: 扩展选区&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/MultiEditUtils&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MultiEditUtils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Color%20Highlighter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Color Highlighter&lt;/a&gt;: 颜色高亮&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/ApplySyntax&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ApplySyntax&lt;/a&gt;: 语言分析增强&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/IMESupport&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IMESupport&lt;/a&gt;:  Windows 下输入法支持, 解决输入法的输入栏不在光标位置的问题&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Package%20Syncing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Package Syncing&lt;/a&gt;: 插件同步工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/HexViewer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HexViewer&lt;/a&gt;: 十六进制文件查看&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Clipboard%20History&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clipboard History&lt;/a&gt;: 剪贴板历史&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SyncedSideBar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SyncedSideBar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Terminal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Terminal&lt;/a&gt;: 从当前文件或项目根路径启动控制台&lt;/li&gt;
&lt;li&gt;[BracketHighlighter](&lt;a href=&quot;https://sublime.wbond.net/packages/BracketHighlighter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://sublime.wbond.net/packages/BracketHighlighter&lt;/a&gt;: 括号高亮&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Autoprefixer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Autoprefixer&lt;/a&gt;: CSS 自动加前缀&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Vintageous&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vintageous&lt;/a&gt;：vi / vim 模拟器&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Alignment&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Can%20I%20Use&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Can I Use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Tag&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BoundInCode/AutoFileName&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AutoFileName&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alienhard/SublimeAllAutocomplete&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AllAutocomplete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wuub/SublimeREPL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SublimeREPL&lt;/a&gt;：在编辑器中运行多种编程语言&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weslly.github.io/ColorPicker/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ColorPicker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vaanwd/Zeal&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zeal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://packagecontrol.io/packages/View%20In%20Browser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;View In Browser&lt;/a&gt;：在浏览器中打开文件，并支持本地服务器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wuub/SublimeREPL/issues/364&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node.js simply not working, at all&lt;/a&gt;：解决无法运行 Node 的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Vintageous&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vintageous&lt;/a&gt;：vi/vim 模拟器&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h1&gt;&lt;p&gt;我自己使用的主题是 &lt;code&gt;Theme - Spacegray&lt;/code&gt;，可以访问网址 &lt;a href=&quot;https://packagecontrol.io/browse/labels/theme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://packagecontrol.io/browse/labels/theme&lt;/a&gt; 寻找自己想要的主题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开命令面板：&lt;code&gt;ctrl + shift + p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查找命令：&lt;code&gt;Package Control: install Package&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查找主题：&lt;code&gt;Theme - Spacegray&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开用户设置：&lt;code&gt;Preferences &amp;gt; Setting - User&lt;/code&gt;，并添加下列配置项：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;theme&amp;quot;: &amp;quot;Spacegray.sublime-theme&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;color_scheme&amp;quot;: &amp;quot;Packages/Theme - Spacegray/base16-eighties.dark.tmTheme&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更多主题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/browse/labels/theme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://sublime.wbond.net/browse/labels/theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://buymeasoda.github.io/soda-theme/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;soda-theme&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Theme%20-%20Soda&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Soda Light&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Theme%20-%20Soda&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Soda Dark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Theme%20-%20Nexus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nexus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Theme%20-%20Flatland&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flatland&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Material%20Theme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material Theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Theme%20-%20Spacegray&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spacegray Light&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Theme%20-%20Spacegray&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spacegray Dark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Tomorrow%20Color%20Schemes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tomorrow Color Schemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://webres.wang/best-sublime-text-3-themes-of-2015-and-2016/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2015 – 2016 最新 Sublime Text 主题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配色&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://colorsublime.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://colorsublime.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://colorsublime.com/how-to-install-a-theme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://colorsublime.com/how-to-install-a-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Theme%20-%20Flatland&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flatland Dark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h1&gt;&lt;h2 id=&quot;代码导航-1&quot;&gt;&lt;a href=&quot;#代码导航-1&quot; class=&quot;headerlink&quot; title=&quot;代码导航&quot;&gt;&lt;/a&gt;代码导航&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl + p: 文件定位&lt;ul&gt;
&lt;li&gt;查找文件, 斜杠代表路径, 支持模糊匹配&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@&lt;/code&gt;: 符号跳转&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;: 关键字跳转&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:&lt;/code&gt;: 行号跳转&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ctrl + ;: 词语定位&lt;/li&gt;
&lt;li&gt;ctrl + r: 函数定位&lt;/li&gt;
&lt;li&gt;ctrl + g: 行数定位&lt;/li&gt;
&lt;li&gt;F12：查看定义&lt;/li&gt;
&lt;li&gt;alt+minus：返回&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码查找&quot;&gt;&lt;a href=&quot;#代码查找&quot; class=&quot;headerlink&quot; title=&quot;代码查找&quot;&gt;&lt;/a&gt;代码查找&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;选中关键字&lt;ul&gt;
&lt;li&gt;f3: 下一个&lt;/li&gt;
&lt;li&gt;shift f3: : 上一个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ctrl + f: 普通查找&lt;ul&gt;
&lt;li&gt;enter: 下一个&lt;/li&gt;
&lt;li&gt;shift + enter: 上一个&lt;/li&gt;
&lt;li&gt;alt + enter: 选中其出现的所有位置&lt;/li&gt;
&lt;li&gt;alt + r: 切换正则表达式模式&lt;/li&gt;
&lt;li&gt;alt + c: 切换大小写敏感模式&lt;/li&gt;
&lt;li&gt;alt + w: 切换整字匹配模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ctrl + h: 查找替换&lt;ul&gt;
&lt;li&gt;ctrl + shift + h: 替换当前关键字&lt;/li&gt;
&lt;li&gt;ctrl + alt + enter: 替换所有匹配关键字&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ctrl + shift + f: 在文件夹中查找&lt;/li&gt;
&lt;li&gt;ctrl + i: 代码字符串定位&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码选择&quot;&gt;&lt;a href=&quot;#代码选择&quot; class=&quot;headerlink&quot; title=&quot;代码选择&quot;&gt;&lt;/a&gt;代码选择&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl + m: 光标在开闭括号之间跳转&lt;/li&gt;
&lt;li&gt;ctrl + shift + m: 将匹配括号中的内容选中&lt;/li&gt;
&lt;li&gt;ctrl + left/right: 向左或向右移动一个单词的光标&lt;/li&gt;
&lt;li&gt;ctrl + d: 选中相同的词(可用于修改本地变量名)&lt;/li&gt;
&lt;li&gt;ctrl + k:&lt;/li&gt;
&lt;li&gt;ctrl + alt + up/down: 将选中的区域分割成多行选中状态&lt;/li&gt;
&lt;li&gt;shift + 鼠标右键拖动: 多重光标选中&lt;/li&gt;
&lt;li&gt;ctrl + l: 选中一行&lt;/li&gt;
&lt;li&gt;ctrl + shif + j: 已缩进层级为依据，一层层向外选中&lt;/li&gt;
&lt;li&gt;alt + f3: 选择所有相同的词&lt;/li&gt;
&lt;li&gt;ctrl + shift + ‘: 选中 HTML 一对标签(Emmet)&lt;/li&gt;
&lt;li&gt;ctrl + shift + space: 扩展选取(ExpandRegion)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;代码编辑&quot;&gt;&lt;a href=&quot;#代码编辑&quot; class=&quot;headerlink&quot; title=&quot;代码编辑&quot;&gt;&lt;/a&gt;代码编辑&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl + shift + enter: 向光标前插入一行&lt;/li&gt;
&lt;li&gt;ctrl + enter: 向光标后插入一行&lt;/li&gt;
&lt;li&gt;shift + ctrl + up/down: 上下移动行&lt;/li&gt;
&lt;li&gt;ctrl + shift + d: 复制粘贴当前行&lt;/li&gt;
&lt;li&gt;ctrl + shift + v: 以当前缩进粘贴代码&lt;/li&gt;
&lt;li&gt;ctrl + J: 拼接行(css格式化时挺有用)&lt;/li&gt;
&lt;li&gt;ctrl + k, k: 从光标开始的地方删除到行尾&lt;/li&gt;
&lt;li&gt;ctrl + shift + backspace: 左侧全部删除&lt;/li&gt;
&lt;li&gt;ctrl + shift + delete: 右侧全部删除&lt;/li&gt;
&lt;li&gt;ctrl + shift + k: 删除当前行&lt;/li&gt;
&lt;li&gt;ctrl + x: 删除当前行&lt;/li&gt;
&lt;li&gt;ctrl + t: 相邻字母互换位置&lt;/li&gt;
&lt;li&gt;ctrl + [: 向左缩进&lt;/li&gt;
&lt;li&gt;ctrl + ]: 向右缩进&lt;/li&gt;
&lt;li&gt;ctrl + /: 注释&lt;/li&gt;
&lt;li&gt;ctrl + shift + /: 当前位置插入块注释&lt;/li&gt;
&lt;li&gt;ctrl + z: 恢复至前编辑状态&lt;/li&gt;
&lt;li&gt;ctrl + y: …&lt;/li&gt;
&lt;li&gt;ctrl + k, u: 转换选中文本为大写&lt;/li&gt;
&lt;li&gt;ctrl + k, l: 转换选中文本为小写&lt;/li&gt;
&lt;li&gt;ctrl + e: emmet&lt;/li&gt;
&lt;li&gt;ctrl + shift + y: 将光标处的表达式计算，对于数学不好的很有用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;视图&quot;&gt;&lt;a href=&quot;#视图&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl + shit [: 折叠代码&lt;/li&gt;
&lt;li&gt;ctrl + shift ]: 展开代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;工程&quot;&gt;&lt;a href=&quot;#工程&quot; class=&quot;headerlink&quot; title=&quot;工程&quot;&gt;&lt;/a&gt;工程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;shift + alt + p: 切换项目&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;窗口-标签&quot;&gt;&lt;a href=&quot;#窗口-标签&quot; class=&quot;headerlink&quot; title=&quot;窗口/标签&quot;&gt;&lt;/a&gt;窗口/标签&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl + shift + n: 创建一个新窗口&lt;/li&gt;
&lt;li&gt;ctrl + n: 新增标签&lt;/li&gt;
&lt;li&gt;ctrl + shift + t: 打开最后一次关闭的文件&lt;/li&gt;
&lt;li&gt;ctrl + tab: 循环遍历标签&lt;/li&gt;
&lt;li&gt;ctrl + shift + tab: 反向循环遍历标签&lt;/li&gt;
&lt;li&gt;ctrl + pgup: 前一标签&lt;/li&gt;
&lt;li&gt;ctrl + pgdn: 后一标签&lt;/li&gt;
&lt;li&gt;ctrl + w: 关闭标签&lt;/li&gt;
&lt;li&gt;ctrl + shift + w: 关闭所有标签&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;分屏&quot;&gt;&lt;a href=&quot;#分屏&quot; class=&quot;headerlink&quot; title=&quot;分屏&quot;&gt;&lt;/a&gt;分屏&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Alt + Shift + 2: 左右分屏&lt;/li&gt;
&lt;li&gt;Alt + Shift + 8: 上下分屏&lt;/li&gt;
&lt;li&gt;Alt + Shift + 5: 上下左右分屏&lt;/li&gt;
&lt;li&gt;ctrl + 数字: 跳转到指定屏&lt;/li&gt;
&lt;li&gt;ctrl + shift + 数字键: 将当前屏移动到指定屏&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;通用&quot;&gt;&lt;a href=&quot;#通用&quot; class=&quot;headerlink&quot; title=&quot;通用&quot;&gt;&lt;/a&gt;通用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ctrl + f2: 设置书签&lt;/li&gt;
&lt;li&gt;f2: 切换书签&lt;/li&gt;
&lt;li&gt;f11: 全屏&lt;/li&gt;
&lt;li&gt;shift + f11: 无干扰全屏&lt;/li&gt;
&lt;li&gt;ctrl + shift + p: 打开命令行, 并利用缩写快速查找命令&lt;ul&gt;
&lt;li&gt;package control/pc: 包管理器, 常用命令: pci(安装插件), pcr(卸载插件), pcd(禁用插件), pce(启用插件)&lt;/li&gt;
&lt;li&gt;project: 项目&lt;/li&gt;
&lt;li&gt;snippet: 代码片段&lt;/li&gt;
&lt;li&gt;set syntax/ss: 语法设置命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ctrl + k, ctrl + b: 隐藏/打开侧边栏&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;项目&quot;&gt;&lt;a href=&quot;#项目&quot; class=&quot;headerlink&quot; title=&quot;项目&quot;&gt;&lt;/a&gt;项目&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/docs/3/projects.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.sublimetext.com/docs/3/projects.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/ifantastic/p/3485943.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[SublimeText] 如何创建工程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;trim_trailing_white_space_on_save，自动移除行尾多余空格，处女座更安心了&lt;/li&gt;
&lt;li&gt;ensure_newline_at_eof_on_save，文件末尾自动保留一个空行，懂的人自然知道它的用处&lt;/li&gt;
&lt;li&gt;font_face 设置字体。Microsoft YaHei Mono 是一款混合字体，专为代码优化，看起来很舒服。当然你也可以使用你自己喜欢的字体，或者删掉本行，使用默认字体&lt;/li&gt;
&lt;li&gt;disable_tab_abbreviations 设置为 true ，禁用 Emmet 的 tab 键功能（请使用 ctrl+e），系统自带的 tab 功能还是可圈可点的。当然你也可以不设置它，以完全使用 Emmet 的 tab 补全功能&lt;/li&gt;
&lt;li&gt;translate_tabs_to_spaces 很明白就是把代码 tab 对齐转换为空格对齐，tab_size 配合设置空格数。这个需求因人而异了，不喜欢可以去掉&lt;/li&gt;
&lt;li&gt;draw_minimap_border，用于右侧代码预览时给所在区域加上边框，方便识别&lt;/li&gt;
&lt;li&gt;save_on_focus_lost，窗口失焦立即保存文件，嘛嘛再也不用担心你忘记保存了&lt;/li&gt;
&lt;li&gt;highlight_line，当前行高亮&lt;/li&gt;
&lt;li&gt;word_wrap，设置自动换行&lt;/li&gt;
&lt;li&gt;fade_fold_buttons，默认显示行号右侧的代码段闭合展开三角号&lt;/li&gt;
&lt;li&gt;bold_folder_labels，侧边栏文件夹显示加粗，区别于文件&lt;/li&gt;
&lt;li&gt;highlight_modified_tabs，高亮未保存文件&lt;/li&gt;
&lt;li&gt;default_line_ending: “unix”, 使用 unix 风格的换行符&lt;/li&gt;
&lt;li&gt;auto_find_in_selection: true ，开启选中范围内搜索（而不是整个文档&lt;/li&gt;
&lt;li&gt;ignored_packages: 禁用的插件&lt;/li&gt;
&lt;li&gt;auto_find_in_selection: 在选中范围内搜索和替换&lt;/li&gt;
&lt;li&gt;caret_style: phase, 使光标闪动更加柔和&lt;/li&gt;
&lt;li&gt;rulers: [80, 100], 行宽标尺&lt;/li&gt;
&lt;li&gt;draw_white_space: all, 显示空白字符&lt;/li&gt;
&lt;li&gt;folder_exclude_patterns: 文件夹排除模式  &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;folder_exclude_patterns&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;.svn&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;.git&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;.hg&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;CVS&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;node_modules&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;bower_components&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;自动换行&quot;&gt;&lt;a href=&quot;#自动换行&quot; class=&quot;headerlink&quot; title=&quot;自动换行&quot;&gt;&lt;/a&gt;自动换行&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;word_wrap&lt;ul&gt;
&lt;li&gt;true：开启自动换行（不会出现水平滚动条）&lt;/li&gt;
&lt;li&gt;false: 关闭自动换行（出现水平滚动条）&lt;/li&gt;
&lt;li&gt;auto：如果代码的话，开启自动换行，否则不自动换行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;wrap_width&lt;ul&gt;
&lt;li&gt;0：超出窗口宽度时自动换行&lt;/li&gt;
&lt;li&gt;大于零：代码长度超出该值时自动换行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rules：标尺&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/13661462/getting-full-js-autocompletion-under-sublime-text&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting full JS autocompletion under Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://emmet.io/blog/sublime-tern/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://emmet.io/blog/sublime-tern/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sublimecodeintel.github.io/SublimeCodeIntel/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sublimecodeintel.github.io/SublimeCodeIntel/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/16235706/sublime-3-set-key-map-for-function-goto-definition&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime 3 - Set Key map for function Goto Definition&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不支持 &lt;code&gt;.eslintignore&lt;/code&gt;：&lt;a href=&quot;https://github.com/roadhump/SublimeLinter-eslint/pull/145&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;default to .eslintignore, allow overrides&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h1&gt;&lt;h2 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;官方文档：&lt;a href=&quot;http://www.sublimetext.com/docs/3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.sublimetext.com/docs/3/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;非官方文档: &lt;a href=&quot;http://sublime-text-unofficial-documentation.readthedocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sublime-text-unofficial-documentation.readthedocs.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;社区论坛&quot;&gt;&lt;a href=&quot;#社区论坛&quot; class=&quot;headerlink&quot; title=&quot;社区论坛&quot;&gt;&lt;/a&gt;社区论坛&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;官方论坛：&lt;a href=&quot;http://www.sublimetext.com/forum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.sublimetext.com/forum/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/sublimetext&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stack Overflow Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/sublimetext2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stack Overflow Sublime Text 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/tagged/sublimetext3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stack Overflow Sublime Text 3&lt;/a&gt; — 比官方文档还要全面&lt;/li&gt;
&lt;li&gt;Package Control: &lt;a href=&quot;https://sublime.wbond.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://sublime.wbond.net/&lt;/a&gt; — 大量的Sublime Text插件和主题&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;推荐书籍&quot;&gt;&lt;a href=&quot;#推荐书籍&quot; class=&quot;headerlink&quot; title=&quot;推荐书籍&quot;&gt;&lt;/a&gt;推荐书籍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Mastering-Sublime-Community-Experience-Distilled/dp/1849698422/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mastering Sublime Text&lt;/a&gt; — 书中介绍的插件很实用，但对编辑技巧介绍不全&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Instant-Sublime-Text-Starter-Haughee/dp/1849693927/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instant Sublime Text Starter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;视频&quot;&gt;&lt;a href=&quot;#视频&quot; class=&quot;headerlink&quot; title=&quot;视频&quot;&gt;&lt;/a&gt;视频&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Getting Started with SublimeText：&lt;a href=&quot;https://www.youtube.com/watch?v=04gKiTiRlq8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.youtube.com/watch?v=04gKiTiRlq8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sublime Text Pefect Workflow：&lt;a href=&quot;https://www.youtube.com/watch?v=bpEp0ePIOEM&amp;amp;list=PLuwqxbvf3olpLsnFvo06gbrkcEB5o7K0g&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.youtube.com/watch?v=bpEp0ePIOEM&amp;amp;list=PLuwqxbvf3olpLsnFvo06gbrkcEB5o7K0g&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;前端开发工具技巧介绍—Sublime篇: &lt;a href=&quot;http://www.imooc.com/learn/40&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.imooc.com/learn/40&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;精选博文&quot;&gt;&lt;a href=&quot;#精选博文&quot; class=&quot;headerlink&quot; title=&quot;精选博文&quot;&gt;&lt;/a&gt;精选博文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.lucida.me/blog/sublime-text-complete-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 全程指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jikeytang/sublime-text&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jikeytang/sublime-text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;其他-1&quot;&gt;&lt;a href=&quot;#其他-1&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jobbole.com/23949/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text：初学者不知道的那些事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jenux.me/?p=49&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;译:Sublime Text 2 项目设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/topic/19668076&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 知乎话题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/question/19976788&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 有哪些实用技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gyfnice/javascript/tree/sublime-snippets/snippets/sublime/javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常用代码片段&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://net.tutsplus.com/tutorials/tools-and-tips/sublime-text-2-tips-and-tricks/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 2 Tips and Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lucifr.com/139225/sublime-text-2-tricks-and-tips/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 2 入门及技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;一些必不可少的Sublime Text 2插件&quot;&gt;一些必不可少的Sublime Text 2插件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sheyilin.cn/2015/05/sublime_text_3_tiao_jiao_ni_de_si_ren_li_qi_1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 3 调教你的私人利器（上&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sheyilin.cn/2015/05/sublime_text_3_tiao_jiao_ni_de_si_ren_li_qi_2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 3 调教你的私人利器（下）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.sublimetext.info/en/latest/reference/commands.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Commands — Sublime Text Unofficial Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/categories/sublime-text&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://code.tutsplus.com/categories/sublime-text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jikeytang/sublime-text&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jikeytang/sublime-text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/40&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;前端开发工具技巧介绍—Sublime篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/333&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;快乐的sublime编辑器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.sublimetext.tw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 手冊&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tutsplus.com/course/improve-workflow-in-sublime-text-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tuts+ Premium Course: Perfect Workflow in Sublime Text 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yunxiu.org/blog/article/5487.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sublime text 使用攻略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yunxiu.org/blog/article/5490.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emmet 插件使用教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/40&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;前端开发工具技巧介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://1.lgmrain.sinaapp.com/?p=163&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Raining » sublime Text 快捷键常用总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yanhaijing.com/tool/2014/10/24/my-sublime/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的 Sublime Text 2 笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.welefen.com/keymapmanager-add-check-plugins-keymap-conflict-feature.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KeymapManager增加检测快捷键冲突的功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.iteye.com/news/27580&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emmet：HTML/CSS代码快速编写神器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_7d34486c0100vu20.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 2快捷键大全 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.shortcutfoo.com/app/dojos/sublime-text-3-win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sublime-text-3-win 快捷键练习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tcreator.info/social/experience/markdown-to-pdf.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;/markdown-to-pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[KeymapManager增加检测快捷键冲突的功能&lt;a href=&quot;http://www.welefen.com/keymapmanager-add-check-plugins-keymap-conflict-feature.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.welefen.com/keymapmanager-add-check-plugins-keymap-conflict-feature.html&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何优雅地使用Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/9536280/sublime-text-2-files-not-opening-a-new-tab&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 2 - Files not opening a new tab?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Mac&quot;&gt;&lt;a href=&quot;#Mac&quot; class=&quot;headerlink&quot; title=&quot;Mac&quot;&gt;&lt;/a&gt;Mac&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* tab */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;super+pageup&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;prev_view&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;super+pagedown&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;next_view&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* find */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;f3&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;find_next&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;shift+f3&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;find_prev&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* cursor*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;super+left&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;move&amp;quot;, &amp;quot;args&amp;quot;: &amp;#123;&amp;quot;by&amp;quot;: &amp;quot;subwords&amp;quot;, &amp;quot;forward&amp;quot;: false&amp;#125; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;super+right&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;move&amp;quot;, &amp;quot;args&amp;quot;: &amp;#123;&amp;quot;by&amp;quot;: &amp;quot;subword_ends&amp;quot;, &amp;quot;forward&amp;quot;: true&amp;#125; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;home&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;move_to&amp;quot;, &amp;quot;args&amp;quot;: &amp;#123;&amp;quot;to&amp;quot;: &amp;quot;bol&amp;quot;, &amp;quot;extend&amp;quot;: false&amp;#125; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;end&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;move_to&amp;quot;, &amp;quot;args&amp;quot;: &amp;#123;&amp;quot;to&amp;quot;: &amp;quot;eol&amp;quot;, &amp;quot;extend&amp;quot;: false&amp;#125; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* line */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;super+up&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;swap_line_up&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;super+down&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;swap_line_down&amp;quot; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /* comment */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;super+shift+forward_slash&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;toggle_comment&amp;quot;, &amp;quot;args&amp;quot;: &amp;#123; &amp;quot;block&amp;quot;: true &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Linux&quot;&gt;&lt;a href=&quot;#Linux&quot; class=&quot;headerlink&quot; title=&quot;Linux&quot;&gt;&lt;/a&gt;Linux&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;解决 Sublime Text 无法使用中文输入法：&lt;a href=&quot;http://www.jianshu.com/p/bf05fb3a4709&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/bf05fb3a4709&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Sublime  是一个跨平台的编辑器，同时支持 Windows、Linux、Mac OS X 等操作系统，由程序员 Jon Skinner 于 2008 年 1 月份所开发出来，它最初被设计为一个具有丰富扩展功能的 Vim。&lt;/p&gt;
&lt;h1 id=&quot;Package-Con
    
    </summary>
    
      <category term="Editor" scheme="http://zhbhun.github.io/blog/categories/Editor/"/>
    
    
      <category term="Editor" scheme="http://zhbhun.github.io/blog/tags/Editor/"/>
    
  </entry>
  
</feed>
